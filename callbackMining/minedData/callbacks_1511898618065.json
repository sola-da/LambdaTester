[
  {
    "callback": "function (a) {\n    MathJax.Hub.Insert(a.Parse.Entity, {\n        Jcirc: '\\u0134',\n        Jcy: '\\u0419',\n        Jsercy: '\\u0408',\n        Jukcy: '\\u0404',\n        jcirc: '\\u0135',\n        jcy: '\\u0439',\n        jsercy: '\\u0458',\n        jukcy: '\\u0454'\n    });\n    MathJax.Ajax.loadComplete(a.entityDir + '/j.js');\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    it('returns an error', function () {\n        var result = Iconizr.createIconKit();\n        result.should.be.an.Error;\n        result.should.have.property('errno', 1391852448);\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function () {\n    var result = Iconizr.createIconKit();\n    result.should.be.an.Error;\n    result.should.have.property('errno', 1391852448);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    it('returns an error', function () {\n        var result = Iconizr.createIconKit('', '', null, function () {\n            });\n        result.should.be.an.Error;\n        result.should.have.property('errno', 1391852763);\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function () {\n    var result = Iconizr.createIconKit('', '', null, function () {\n        });\n    result.should.be.an.Error;\n    result.should.have.property('errno', 1391852763);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n}",
    "receiverBase": "Iconizr",
    "receiverCallee": "createIconKit"
  },
  {
    "callback": "function () {\n    it('returns an error', function () {\n        var result = Iconizr.createIconKit('/abcde/fghij/klmno', '', null, function () {\n            });\n        result.should.be.an.Error;\n        result.should.have.property('errno', 1391853079);\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function () {\n    var result = Iconizr.createIconKit('/abcde/fghij/klmno', '', null, function () {\n        });\n    result.should.be.an.Error;\n    result.should.have.property('errno', 1391853079);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n}",
    "receiverBase": "Iconizr",
    "receiverCallee": "createIconKit"
  },
  {
    "callback": "function () {\n    it('returns an error', function (done) {\n        Iconizr.createIconKit(path.join(__dirname, 'files'), path.normalize(path.join(__dirname, '..', 'tmp\\0null')), null, function (err, result) {\n            err.should.be.an.Error;\n            err.should.have.property('errno', 1391854708);\n            done();\n        });\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function (done) {\n    Iconizr.createIconKit(path.join(__dirname, 'files'), path.normalize(path.join(__dirname, '..', 'tmp\\0null')), null, function (err, result) {\n        err.should.be.an.Error;\n        err.should.have.property('errno', 1391854708);\n        done();\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (err, result) {\n    err.should.be.an.Error;\n    err.should.have.property('errno', 1391854708);\n    done();\n}",
    "receiverBase": "Iconizr",
    "receiverCallee": "createIconKit"
  },
  {
    "callback": "function () {\n    it('returns an error', function (done) {\n        this.timeout(10000);\n        Iconizr.createIconKit(path.join(__dirname, 'files'), path.normalize(path.join(__dirname, '..', 'tmp', 'css')), {\n            render: { scss: path.normalize(path.join(__dirname, '..', 'tmp', 'sass\\0null/')) },\n            level: 0\n        }, function (err, result) {\n            err.should.be.an.Error;\n            err.should.have.property('errno', 1391854708);\n            done();\n        });\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function (done) {\n    this.timeout(10000);\n    Iconizr.createIconKit(path.join(__dirname, 'files'), path.normalize(path.join(__dirname, '..', 'tmp', 'css')), {\n        render: { scss: path.normalize(path.join(__dirname, '..', 'tmp', 'sass\\0null/')) },\n        level: 0\n    }, function (err, result) {\n        err.should.be.an.Error;\n        err.should.have.property('errno', 1391854708);\n        done();\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (err, result) {\n    err.should.be.an.Error;\n    err.should.have.property('errno', 1391854708);\n    done();\n}",
    "receiverBase": "Iconizr",
    "receiverCallee": "createIconKit"
  },
  {
    "callback": "function () {\n    it('generates 7 files', function (done) {\n        this.timeout(10000);\n        Iconizr.createIconKit(path.join(__dirname, 'files'), path.normalize(path.join(__dirname, '..', 'tmp', 'css')), { level: 0 }, function (err, result) {\n            should(err).not.ok;\n            should(result).be.an.Object;\n            should(result).property('success', true);\n            should(result).property('length', 7);\n            done();\n        });\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function (done) {\n    this.timeout(10000);\n    Iconizr.createIconKit(path.join(__dirname, 'files'), path.normalize(path.join(__dirname, '..', 'tmp', 'css')), { level: 0 }, function (err, result) {\n        should(err).not.ok;\n        should(result).be.an.Object;\n        should(result).property('success', true);\n        should(result).property('length', 7);\n        done();\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (err, result) {\n    should(err).not.ok;\n    should(result).be.an.Object;\n    should(result).property('success', true);\n    should(result).property('length', 7);\n    done();\n}",
    "receiverBase": "Iconizr",
    "receiverCallee": "createIconKit"
  },
  {
    "callback": "function (err, result) {\n    should(err).not.ok;\n    should(result).be.an.Object;\n    should(result).property('success', true);\n    should(result).property('length', 57);\n    done();\n}",
    "receiverBase": "Iconizr",
    "receiverCallee": "createIconKit"
  },
  {
    "callback": "function (done) {\n    rimraf(path.normalize(path.join(__dirname, '..', 'tmp')), function (error) {\n        done();\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "after"
  },
  {
    "callback": "function (error) {\n    done();\n}",
    "receiverBase": "",
    "receiverCallee": "rimraf"
  },
  {
    "callback": "function (req, res) {\n    res.send('200 OK');\n}",
    "receiverBase": "app",
    "receiverCallee": "get"
  },
  {
    "callback": "function () {\n    debug('Server listening on port ' + app.get('port') + ' ' + 'in ' + app.get('env') + ' mode');\n}",
    "receiverBase": "app",
    "receiverCallee": "listen"
  },
  {
    "callback": "function (Rx, exports) {\n    return factory(root, exports, Rx);\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (b) {\n    if (b) {\n        connection = conn.connect();\n    } else {\n        connection.dispose();\n        connection = disposableEmpty;\n    }\n}",
    "receiverBase": "distinctUntilChanged",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function (x) {\n    next(x, 0);\n}",
    "receiverBase": "source",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function (e) {\n    if (values[1]) {\n        observer.onError(e);\n    } else {\n        err = e;\n    }\n}",
    "receiverBase": "source",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    isDone = true;\n    values[1] && observer.onCompleted();\n}",
    "receiverBase": "source",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function (x) {\n    next(x, 1);\n}",
    "receiverBase": "subject",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    isDone = true;\n    next(true, 1);\n}",
    "receiverBase": "subject",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function (data, shouldFire) {\n    return {\n        data: data,\n        shouldFire: shouldFire\n    };\n}",
    "receiverBase": "",
    "receiverCallee": "combineLatestSource"
  },
  {
    "callback": "function (err) {\n    while (q.length > 0) {\n        observer.onNext(q.shift());\n    }\n    observer.onError(err);\n}",
    "receiverBase": "combineLatestSource",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    while (q.length > 0) {\n        observer.onNext(q.shift());\n    }\n    observer.onCompleted();\n}",
    "receiverBase": "combineLatestSource",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    self.requestedCount = 0;\n}",
    "receiverBase": "",
    "receiverCallee": "disposableCreate"
  },
  {
    "callback": "function () {\n    self.source.request(1);\n}",
    "receiverBase": "timeoutScheduler",
    "receiverCallee": "schedule"
  },
  {
    "callback": "function () {\n    self.observable.source.request(1);\n}",
    "receiverBase": "timeoutScheduler",
    "receiverCallee": "schedule"
  },
  {
    "callback": "function () {\n    self.source.request(self.windowSize);\n}",
    "receiverBase": "timeoutScheduler",
    "receiverCallee": "schedule"
  },
  {
    "callback": "function () {\n    self.observable.source.request(self.observable.windowSize);\n}",
    "receiverBase": "timeoutScheduler",
    "receiverCallee": "schedule"
  },
  {
    "callback": "function (key, val, o) {\n    if (Ext.isEmpty(this.selectedFacets)) {\n        this.selectedFacets = [key];\n    }\n    data.push({\n        id: key,\n        name: Ext.htmlDecode(Ext.valueFrom(val['title'], L['facet_' + key]))\n    });\n}",
    "receiverBase": "Ext",
    "receiverCallee": "iterate"
  },
  {
    "callback": "function (item) {\n    console.log('  ', item.file, ':', item.line);\n}",
    "receiverBase": "trace",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function () {\n    var expected = arguments[0];\n    processVersion(arguments[3], arguments[4]);\n    processForm(arguments[1]);\n    processBlocks(arguments[1], arguments[2]);\n    var newblocks = toAppYail();\n    return doTheyMatch(expected, newblocks);\n}",
    "receiverBase": "page",
    "receiverCallee": "evaluate"
  },
  {
    "callback": "function (plugin) {\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], plugin);\n    } else {\n        plugin(jQuery);\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    var elem = this, isWin = !elem.nodeName || $.inArray(elem.nodeName.toLowerCase(), [\n            'iframe',\n            '#document',\n            'html',\n            'body'\n        ]) != -1;\n    if (!isWin)\n        return elem;\n    var doc = (elem.contentWindow || elem).document || elem.ownerDocument || elem;\n    return /webkit/i.test(navigator.userAgent) || doc.compatMode == 'BackCompat' ? doc.body : doc.documentElement;\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    callback(new TypeError('Could not compact, too few arguments.'));\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function () {\n    callback(new JsonLdError('The compaction context must not be null.', 'jsonld.CompactError', { code: 'invalid local context' }));\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function () {\n    callback(null, null);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function () {\n    if (options.skipExpansion) {\n        return callback(null, input);\n    }\n    jsonld.expand(input, options, callback);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function (err, activeCtx) {\n    if (err) {\n        return callback(new JsonLdError('Could not process context before compaction.', 'jsonld.CompactError', { cause: err }));\n    }\n    var compacted;\n    try {\n        compacted = new Processor().compact(activeCtx, null, expanded, options);\n    } catch (ex) {\n        return callback(ex);\n    }\n    cleanup(null, compacted, activeCtx, options);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "processContext"
  },
  {
    "callback": "function () {\n    callback(new TypeError('Could not expand, too few arguments.'));\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function () {\n    callback(new TypeError('Could not flatten, too few arguments.'));\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function (err, compacted) {\n    if (err) {\n        return callback(new JsonLdError('Could not compact flattened output.', 'jsonld.FlattenError', { cause: err }));\n    }\n    callback(null, compacted);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "compact"
  },
  {
    "callback": "function () {\n    callback(new TypeError('Could not frame, too few arguments.'));\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function (err, compacted, ctx) {\n    if (err) {\n        return callback(new JsonLdError('Could not compact framed output.', 'jsonld.FrameError', { cause: err }));\n    }\n    var graph = _compactIri(ctx, '@graph');\n    compacted[graph] = _removePreserve(ctx, compacted[graph], opts);\n    callback(null, compacted);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "compact"
  },
  {
    "callback": "function () {\n    callback(new TypeError('Could not normalize, too few arguments.'));\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function (err, dataset) {\n    if (err) {\n        return callback(new JsonLdError('Could not convert input to RDF dataset before normalization.', 'jsonld.NormalizeError', { cause: err }));\n    }\n    new Processor().normalize(dataset, options, callback);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "toRDF"
  },
  {
    "callback": "function () {\n    callback(new TypeError('Could not convert from RDF, too few arguments.'));\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function (err, dataset) {\n    if (err) {\n        return callback(err);\n    }\n    fromRDF(dataset, options, callback);\n}",
    "receiverBase": "",
    "receiverCallee": "rdfParser"
  },
  {
    "callback": "function (dataset) {\n    fromRDF(dataset, options, callback);\n}",
    "receiverBase": "dataset",
    "receiverCallee": "then"
  },
  {
    "callback": "function () {\n    callback(new TypeError('Could not convert to RDF, too few arguments.'));\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function (callback) {\n    callback(err);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "promisify"
  },
  {
    "callback": "function (err, compacted) {\n    callback(err, compacted);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "compact"
  },
  {
    "callback": "function (err, value) {\n    if (!err) {\n        resolve(value);\n    } else {\n        reject(err);\n    }\n}",
    "receiverBase": "args",
    "receiverCallee": "concat"
  },
  {
    "callback": "function (err, ctx) {\n    if (err) {\n        return callback(err);\n    }\n    try {\n        ctx = new Processor().processContext(activeCtx, ctx, options);\n    } catch (ex) {\n        return callback(ex);\n    }\n    callback(null, ctx);\n}",
    "receiverBase": "",
    "receiverCallee": "_retrieveContextUrls"
  },
  {
    "callback": "function (e) {\n    return !jsonld.compareValues(e, value);\n}",
    "receiverBase": "getValues",
    "receiverCallee": "filter"
  },
  {
    "callback": "function () {\n    hashUnnamed(0);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "setImmediate"
  },
  {
    "callback": "function () {\n    hashUnnamed(i + 1);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "setImmediate"
  },
  {
    "callback": "function (a, b) {\n    a = a.hash;\n    b = b.hash;\n    return a < b ? -1 : a > b ? 1 : 0;\n}",
    "receiverBase": "results",
    "receiverCallee": "sort"
  },
  {
    "callback": "function (err, result) {\n    if (err) {\n        return callback(err);\n    }\n    results.push(result);\n    nameGroupMember(group, n + 1);\n}",
    "receiverBase": "",
    "receiverCallee": "_hashPaths"
  },
  {
    "callback": "function () {\n    groupNodes(0);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "setImmediate"
  },
  {
    "callback": "function () {\n    groupNodes(i + 1);\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "setImmediate"
  },
  {
    "callback": "function () {\n    permutate();\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "setImmediate"
  },
  {
    "callback": "function (err, result) {\n    if (err) {\n        return callback(err);\n    }\n    path += pathNamerCopy.getName(bnode) + '<' + result.hash + '>';\n    pathNamerCopy = result.pathNamer;\n    if (chosenPath !== null && path.length >= chosenPath.length && path > chosenPath) {\n        return nextPermutation(true);\n    }\n    nextRecursion(n + 1);\n}",
    "receiverBase": "",
    "receiverCallee": "_hashPaths"
  },
  {
    "callback": "function () {\n    permutate();\n}",
    "receiverBase": "jsonld",
    "receiverCallee": "setImmediate"
  },
  {
    "callback": "function (err, ctx) {\n    if (err) {\n        return callback(err);\n    }\n    urls[url] = ctx['@context'];\n    count -= 1;\n    if (count === 0) {\n        finished();\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "retrieve"
  },
  {
    "callback": "function () {\n    return factory();\n}",
    "receiverBase": "",
    "receiverCallee": "wrapper"
  },
  {
    "callback": "function () {\n    return factory;\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (match) {\n    return HTML_CHARS[match];\n}",
    "receiverCallee": "replace"
  },
  {
    "callback": "function () {\n    expect(1);\n    var cal = createCalendar({ subDomainTextFormat: 'R' });\n    strictEqual(cal.options.subDomainTextFormat, 'R');\n}",
    "receiverBase": "",
    "receiverCallee": "test"
  },
  {
    "callback": "function () {\n    expect(1);\n    var cal = createCalendar({\n            subDomainTextFormat: function () {\n            }\n        });\n    ok(typeof cal.options.subDomainTextFormat === 'function');\n}",
    "receiverBase": "",
    "receiverCallee": "test"
  },
  {
    "callback": "function () {\n    expect(1);\n    var cal = createCalendar({ subDomainTextFormat: input });\n    strictEqual(cal.options.subDomainTextFormat, null, 'Invalid input should fallback to null');\n}",
    "receiverBase": "",
    "receiverCallee": "test"
  },
  {
    "callback": "function (e) {\n    e.stopPropagation();\n    switch (e.which) {\n    case 1:\n        selectNode(this);\n        break;\n    case 3:\n        deleteNode($node);\n        setMemory();\n        break;\n    }\n}",
    "receiverBase": "$node",
    "receiverCallee": "mousedown"
  },
  {
    "callback": "function (e) {\n    e.preventDefault();\n}",
    "receiverBase": "mousedown",
    "receiverCallee": "bind"
  },
  {
    "callback": "function () {\n    colors.push(escape($(this).css('backgroundColor')));\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    addNode(unescape(this));\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function (e) {\n    addNode(inst.color.toCSS());\n    setMemory();\n}",
    "receiverBase": "container",
    "receiverCallee": "mousedown"
  },
  {
    "callback": "function (state, action, editor, session, range) {\n    var selected = session.doc.getTextRange(range);\n    if (!range.isMultiLine() && selected == '{') {\n        initContext(editor);\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.end.column, range.end.column + 1);\n        if (rightChar == '}') {\n            range.end.column++;\n            return range;\n        } else {\n            context.maybeInsertedBrackets--;\n        }\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "add"
  },
  {
    "callback": "function (state, action, editor, session, range) {\n    var selected = session.doc.getTextRange(range);\n    if (!range.isMultiLine() && selected == '(') {\n        initContext(editor);\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n        if (rightChar == ')') {\n            range.end.column++;\n            return range;\n        }\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "add"
  },
  {
    "callback": "function (state, action, editor, session, range) {\n    var selected = session.doc.getTextRange(range);\n    if (!range.isMultiLine() && selected == '[') {\n        initContext(editor);\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n        if (rightChar == ']') {\n            range.end.column++;\n            return range;\n        }\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "add"
  },
  {
    "callback": "function (state, action, editor, session, range) {\n    var selected = session.doc.getTextRange(range);\n    if (!range.isMultiLine() && (selected == '\"' || selected == '\\'')) {\n        initContext(editor);\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n        if (rightChar == selected) {\n            range.end.column++;\n            return range;\n        }\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "add"
  },
  {
    "callback": "function (e) {\n    session.setAnnotations([e.data]);\n}",
    "receiverBase": "worker",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    session.clearAnnotations();\n}",
    "receiverBase": "worker",
    "receiverCallee": "on"
  },
  {
    "callback": "function (a, b) {\n    return '$|' + (b ? '^' : '^.*\\\\.');\n}",
    "receiverBase": "extensions",
    "receiverCallee": "replace"
  },
  {
    "callback": "function () {\n    ace.require(['ace/ext/modelist'], function () {\n    });\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n}",
    "receiverBase": "ace",
    "receiverCallee": "require"
  },
  {
    "callback": "function (global, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = global.document ? factory(global, true) : function (w) {\n            if (!w.document) {\n                throw new Error('jQuery requires a window with a document');\n            }\n            return factory(w);\n        };\n    } else {\n        factory(global);\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (elem, i) {\n    return callback.call(elem, i, elem);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function (i, name) {\n    class2type['[object ' + name + ']'] = name.toLowerCase();\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (argument) {\n    argument = +argument;\n    return markFunction(function (seed, matches) {\n        var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n        while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n                seed[j] = !(matches[j] = seed[j]);\n            }\n        }\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (seed, matches) {\n    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n    while (i--) {\n        if (seed[j = matchIndexes[i]]) {\n            seed[j] = !(matches[j] = seed[j]);\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (div) {\n    div.className = 'i';\n    return !div.getAttribute('className');\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.appendChild(doc.createComment(''));\n    return !div.getElementsByTagName('*').length;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    docElem.appendChild(div).id = expando;\n    return !doc.getElementsByName || !doc.getElementsByName(expando).length;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    var input = doc.createElement('input');\n    input.setAttribute('type', 'hidden');\n    div.appendChild(input).setAttribute('name', 'D');\n    if (div.querySelectorAll('[name=d]').length) {\n        rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');\n    }\n    if (!div.querySelectorAll(':enabled').length) {\n        rbuggyQSA.push(':enabled', ':disabled');\n    }\n    div.querySelectorAll('*,:x');\n    rbuggyQSA.push(',.*:');\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    support.disconnectedMatch = matches.call(div, 'div');\n    matches.call(div, '[s!=\\'\\']:x');\n    rbuggyMatches.push('!=', pseudos);\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (elem) {\n    return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');\n}",
    "receiverBase": "",
    "receiverCallee": "classCache"
  },
  {
    "callback": "function (seed, matches) {\n    var idx, matched = fn(seed, argument), i = matched.length;\n    while (i--) {\n        idx = indexOf(seed, matched[i]);\n        seed[idx] = !(matches[idx] = matched[i]);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (seed, matches, context, xml) {\n    var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;\n    while (i--) {\n        if (elem = unmatched[i]) {\n            seed[i] = !(matches[i] = elem);\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (selector) {\n    return function (elem) {\n        return Sizzle(selector, elem).length > 0;\n    };\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (text) {\n    text = text.replace(runescape, funescape);\n    return function (elem) {\n        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n    };\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function () {\n    return [0];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    return [length - 1];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    return [argument < 0 ? argument + length : argument];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    var i = 0;\n    for (; i < length; i += 2) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    var i = 1;\n    for (; i < length; i += 2) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    var i = argument < 0 ? argument + length : argument;\n    for (; --i >= 0;) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    var i = argument < 0 ? argument + length : argument;\n    for (; ++i < length;) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (elem) {\n    return elem === checkContext;\n}",
    "receiverBase": "",
    "receiverCallee": "addCombinator"
  },
  {
    "callback": "function (elem) {\n    return indexOf(checkContext, elem) > -1;\n}",
    "receiverBase": "",
    "receiverCallee": "addCombinator"
  },
  {
    "callback": "function (div1) {\n    return div1.compareDocumentPosition(document.createElement('div')) & 1;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<a href=\\'#\\'></a>';\n    return div.firstChild.getAttribute('href') === '#';\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (elem, name, isXML) {\n    if (!isXML) {\n        return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addHandle"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<input/>';\n    div.firstChild.setAttribute('value', '');\n    return div.firstChild.getAttribute('value') === '';\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (elem, name, isXML) {\n    if (!isXML && elem.nodeName.toLowerCase() === 'input') {\n        return elem.defaultValue;\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addHandle"
  },
  {
    "callback": "function (div) {\n    return div.getAttribute('disabled') == null;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (elem, name, isXML) {\n    var val;\n    if (!isXML) {\n        return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addHandle"
  },
  {
    "callback": "function (elem, i) {\n    return !!qualifier.call(elem, i, elem) !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return elem === qualifier !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return indexOf.call(qualifier, elem) >= 0 !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return elem.nodeType === 1;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function () {\n    for (i = 0; i < len; i++) {\n        if (jQuery.contains(self[i], this)) {\n            return true;\n        }\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "filter"
  },
  {
    "callback": "function () {\n    var i = 0;\n    for (; i < l; i++) {\n        if (jQuery.contains(this, targets[i])) {\n            return true;\n        }\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (_, flag) {\n    object[flag] = true;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function add(args) {\n    jQuery.each(args, function (_, arg) {\n        var type = jQuery.type(arg);\n        if (type === 'function') {\n            if (!options.unique || !self.has(arg)) {\n                list.push(arg);\n            }\n        } else if (arg && arg.length && type !== 'string') {\n            add(arg);\n        }\n    });\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (_, arg) {\n    var type = jQuery.type(arg);\n    if (type === 'function') {\n        if (!options.unique || !self.has(arg)) {\n            list.push(arg);\n        }\n    } else if (arg && arg.length && type !== 'string') {\n        add(arg);\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (_, arg) {\n    var index;\n    while ((index = jQuery.inArray(arg, list, index)) > -1) {\n        list.splice(index, 1);\n        if (firing) {\n            if (index <= firingLength) {\n                firingLength--;\n            }\n            if (index <= firingIndex) {\n                firingIndex--;\n            }\n        }\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, tuple) {\n    var fn = jQuery.isFunction(fns[i]) && fns[i];\n    deferred[tuple[1]](function () {\n        var returned = fn && fn.apply(this, arguments);\n        if (returned && jQuery.isFunction(returned.promise)) {\n            returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n        } else {\n            newDefer[tuple[0] + 'With'](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n        }\n    });\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var returned = fn && fn.apply(this, arguments);\n    if (returned && jQuery.isFunction(returned.promise)) {\n        returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n    } else {\n        newDefer[tuple[0] + 'With'](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "deferred"
  },
  {
    "callback": "function (i, tuple) {\n    var list = tuple[2], stateString = tuple[3];\n    promise[tuple[1]] = list.add;\n    if (stateString) {\n        list.add(function () {\n            state = stateString;\n        }, tuples[i ^ 1][2].disable, tuples[2][2].lock);\n    }\n    deferred[tuple[0]] = function () {\n        deferred[tuple[0] + 'With'](this === deferred ? promise : this, arguments);\n        return this;\n    };\n    deferred[tuple[0] + 'With'] = list.fireWith;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    state = stateString;\n}",
    "receiverBase": "list",
    "receiverCallee": "add"
  },
  {
    "callback": "function () {\n    data_user.set(this, key);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var data = data_user.get(this, camelKey);\n    data_user.set(this, camelKey, value);\n    if (key.indexOf('-') !== -1 && data !== undefined) {\n        data_user.set(this, key, value);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    data_user.remove(this, key);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    data_priv.remove(elem, [\n        type + 'queue',\n        key\n    ]);\n}",
    "receiverBase": "Callbacks",
    "receiverCallee": "add"
  },
  {
    "callback": "function () {\n    var queue = jQuery.queue(this, type, data);\n    jQuery._queueHooks(this, type);\n    if (type === 'fx' && queue[0] !== 'inprogress') {\n        jQuery.dequeue(this, type);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.dequeue(this, type);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.event.add(this, types, fn, data, selector);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.event.remove(this, types, fn, selector);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.event.trigger(type, data, this);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (value) {\n    return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n        }\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "access"
  },
  {
    "callback": "function () {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        this.textContent = value;\n    }\n}",
    "receiverBase": "empty",
    "receiverCallee": "each"
  },
  {
    "callback": "function (elem) {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        var target = manipulationTarget(this, elem);\n        target.appendChild(elem);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        var target = manipulationTarget(this, elem);\n        target.insertBefore(elem, target.firstChild);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.parentNode) {\n        this.parentNode.insertBefore(elem, this);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.parentNode) {\n        this.parentNode.insertBefore(elem, this.nextSibling);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function () {\n    return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function (elem) {\n    arg = this.parentNode;\n    jQuery.cleanData(getAll(this));\n    if (arg) {\n        arg.replaceChild(elem, this);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (index) {\n    var self = set.eq(index);\n    if (isFunction) {\n        args[0] = value.call(this, index, self.html());\n    }\n    self.domManip(args, callback);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (name, original) {\n    jQuery.fn[name] = function (selector) {\n        var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;\n        for (; i <= last; i++) {\n            elems = i === last ? this : this.clone(true);\n            jQuery(insert[i])[original](elems);\n            push.apply(ret, elems.get());\n        }\n        return this.pushStack(ret);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    return getWidthOrHeight(elem, name, extra);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "swap"
  },
  {
    "callback": "function (elem, computed) {\n    if (computed) {\n        return jQuery.swap(elem, { 'display': 'inline-block' }, curCSS, [\n            elem,\n            'marginRight'\n        ]);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addGetHookIf"
  },
  {
    "callback": "function (elem, name, value) {\n    var styles, len, map = {}, i = 0;\n    if (jQuery.isArray(name)) {\n        styles = getStyles(elem);\n        len = name.length;\n        for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n        }\n        return map;\n    }\n    return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n}",
    "receiverBase": "",
    "receiverCallee": "access"
  },
  {
    "callback": "function () {\n    if (isHidden(this)) {\n        jQuery(this).show();\n    } else {\n        jQuery(this).hide();\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    fxNow = undefined;\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    anim.always(function () {\n        hooks.unqueued--;\n        if (!jQuery.queue(elem, 'fx').length) {\n            hooks.empty.fire();\n        }\n    });\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    hooks.unqueued--;\n    if (!jQuery.queue(elem, 'fx').length) {\n        hooks.empty.fire();\n    }\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    style.overflow = opts.overflow[0];\n    style.overflowX = opts.overflow[1];\n    style.overflowY = opts.overflow[2];\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    jQuery(elem).hide();\n}",
    "receiverBase": "anim",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    var prop;\n    data_priv.remove(elem, 'fxshow');\n    for (prop in orig) {\n        jQuery.style(elem, prop, orig[prop]);\n    }\n}",
    "receiverBase": "anim",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    delete tick.elem;\n}",
    "receiverBase": "Deferred",
    "receiverCallee": "always"
  },
  {
    "callback": "function (i, name) {\n    var cssFn = jQuery.fn[name];\n    jQuery.fn[name] = function (speed, easing, callback) {\n        return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n        return this.animate(props, speed, easing, callback);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (next, hooks) {\n    var timeout = setTimeout(next, time);\n    hooks.stop = function () {\n        clearTimeout(timeout);\n    };\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "queue"
  },
  {
    "callback": "function () {\n    var input = document.createElement('input'), select = document.createElement('select'), opt = select.appendChild(document.createElement('option'));\n    input.type = 'checkbox';\n    support.checkOn = input.value !== '';\n    support.optSelected = opt.selected;\n    select.disabled = true;\n    support.optDisabled = !opt.disabled;\n    input = document.createElement('input');\n    input.value = 't';\n    input.type = 'radio';\n    support.radioValue = input.value === 't';\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    jQuery.removeAttr(this, name);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n    attrHandle[name] = function (elem, name, isXML) {\n        var ret, handle;\n        if (!isXML) {\n            handle = attrHandle[name];\n            attrHandle[name] = ret;\n            ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;\n            attrHandle[name] = handle;\n        }\n        return ret;\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    delete this[jQuery.propFix[name] || name];\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (j) {\n    jQuery(this).addClass(value.call(this, j, this.className));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (j) {\n    jQuery(this).removeClass(value.call(this, j, this.className));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (value) {\n    return value == null ? '' : value + '';\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    jQuery.valHooks[this] = {\n        set: function (elem, value) {\n            if (jQuery.isArray(value)) {\n                return elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0;\n            }\n        }\n    };\n    if (!support.checkOn) {\n        jQuery.valHooks[this].get = function (elem) {\n            return elem.getAttribute('value') === null ? 'on' : elem.value;\n        };\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, name) {\n    jQuery.fn[name] = function (data, fn) {\n        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (_, prefilterOrFactory) {\n    var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n    if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {\n        options.dataTypes.unshift(dataTypeOrTransport);\n        inspect(dataTypeOrTransport);\n        return false;\n    } else if (seekingTransport) {\n        return !(selected = dataTypeOrTransport);\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jqXHR.abort('timeout');\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n        if (jQuery.isFunction(data)) {\n            type = type || callback;\n            callback = data;\n            data = undefined;\n        }\n        return jQuery.ajax({\n            url: url,\n            type: method,\n            dataType: type,\n            data: data,\n            success: callback\n        });\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapAll(html.call(this, i));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var elem = this;\n    while (elem.firstElementChild) {\n        elem = elem.firstElementChild;\n    }\n    return elem;\n}",
    "receiverBase": "wrap",
    "receiverCallee": "map"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapInner(html.call(this, i));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var self = jQuery(this), contents = self.contents();\n    if (contents.length) {\n        contents.wrapAll(html);\n    } else {\n        self.append(html);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    if (!jQuery.nodeName(this, 'body')) {\n        jQuery(this).replaceWith(this.childNodes);\n    }\n}",
    "receiverBase": "parent",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, v) {\n    if (traditional || rbracket.test(prefix)) {\n        add(prefix, v);\n    } else {\n        buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add);\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    add(this.name, this.value);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var elements = jQuery.prop(this, 'elements');\n    return elements ? jQuery.makeArray(elements) : this;\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    var type = this.type;\n    return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n}",
    "receiverBase": "map",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (i, elem) {\n    var val = jQuery(this).val();\n    return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {\n        return {\n            name: elem.name,\n            value: val.replace(rCRLF, '\\r\\n')\n        };\n    }) : {\n        name: elem.name,\n        value: val.replace(rCRLF, '\\r\\n')\n    };\n}",
    "receiverBase": "filter",
    "receiverCallee": "map"
  },
  {
    "callback": "function (val) {\n    return {\n        name: elem.name,\n        value: val.replace(rCRLF, '\\r\\n')\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    for (var key in xhrCallbacks) {\n        xhrCallbacks[key]();\n    }\n}",
    "receiverBase": "window",
    "receiverCallee": "attachEvent"
  },
  {
    "callback": "function (s) {\n    if (s.cache === undefined) {\n        s.cache = false;\n    }\n    if (s.crossDomain) {\n        s.type = 'GET';\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "ajaxPrefilter"
  },
  {
    "callback": "function () {\n    window[callbackName] = overwritten;\n    if (s[callbackName]) {\n        s.jsonpCallback = originalSettings.jsonpCallback;\n        oldCallbacks.push(callbackName);\n    }\n    if (responseContainer && jQuery.isFunction(overwritten)) {\n        overwritten(responseContainer[0]);\n    }\n    responseContainer = overwritten = undefined;\n}",
    "receiverBase": "jqXHR",
    "receiverCallee": "always"
  },
  {
    "callback": "function (responseText) {\n    response = arguments;\n    self.html(selector ? jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : responseText);\n}",
    "receiverBase": "ajax",
    "receiverCallee": "done"
  },
  {
    "callback": "function (i, type) {\n    jQuery.fn[type] = function (fn) {\n        return this.on(type, fn);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (fn) {\n    return elem === fn.elem;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (i) {\n    jQuery.offset.setOffset(this, options, i);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var offsetParent = this.offsetParent || docElem;\n    while (offsetParent && (!jQuery.nodeName(offsetParent, 'html') && jQuery.css(offsetParent, 'position') === 'static')) {\n        offsetParent = offsetParent.offsetParent;\n    }\n    return offsetParent || docElem;\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function (elem, method, val) {\n    var win = getWindow(elem);\n    if (val === undefined) {\n        return win ? win[prop] : elem[method];\n    }\n    if (win) {\n        win.scrollTo(!top ? val : window.pageXOffset, top ? val : window.pageYOffset);\n    } else {\n        elem[method] = val;\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "access"
  },
  {
    "callback": "function (i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n        if (computed) {\n            computed = curCSS(elem, prop);\n            return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;\n        }\n    });\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (elem, computed) {\n    if (computed) {\n        computed = curCSS(elem, prop);\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addGetHookIf"
  },
  {
    "callback": "function (elem, type, value) {\n    var doc;\n    if (jQuery.isWindow(elem)) {\n        return elem.document.documentElement['client' + name];\n    }\n    if (elem.nodeType === 9) {\n        doc = elem.documentElement;\n        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);\n    }\n    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);\n}",
    "receiverBase": "",
    "receiverCallee": "access"
  },
  {
    "callback": "function () {\n    return jQuery;\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  }
]