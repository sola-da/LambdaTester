[
  {
    "callback": "function () {\n    it('should be whitespace', function () {\n        var argv = yargs.parse([\n                '-x',\n                '\\t'\n            ]);\n        should.exist(argv);\n        argv.should.have.property('x', '\\t');\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function () {\n    var argv = yargs.parse([\n            '-x',\n            '\\t'\n        ]);\n    should.exist(argv);\n    argv.should.have.property('x', '\\t');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var md = new Remarked('commonmark');\n    utils.addTests(path.join(__dirname, 'fixtures/commonmark/good.txt'), md);\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function (_, $, exports) {\n    root.Backbone = factory(root, exports, _, $);\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function () {\n    self.off(name, once);\n    callback.apply(this, arguments);\n}",
    "receiverBase": "_",
    "receiverCallee": "once"
  },
  {
    "callback": "function (implementation, method) {\n    Events[method] = function (obj, name, callback) {\n        var listeningTo = this._listeningTo || (this._listeningTo = {});\n        var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n        listeningTo[id] = obj;\n        if (!callback && typeof name === 'object')\n            callback = this;\n        obj[implementation](name, callback, this);\n        return this;\n    };\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (method) {\n    Model.prototype[method] = function () {\n        var args = slice.call(arguments);\n        args.unshift(this.attributes);\n        return _[method].apply(_, args);\n    };\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (model) {\n    return model.toJSON(options);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function (model) {\n    for (var key in attrs) {\n        if (attrs[key] !== model.get(key))\n            return false;\n    }\n    return true;\n}",
    "receiverBase": "",
    "receiverCallee": "LIT:this"
  },
  {
    "callback": "function (method) {\n    Collection.prototype[method] = function () {\n        var args = slice.call(arguments);\n        args.unshift(this.models);\n        return _[method].apply(_, args);\n    };\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (method) {\n    Collection.prototype[method] = function (value, context) {\n        var iterator = _.isFunction(value) ? value : function (model) {\n                return model.get(value);\n            };\n        return _[method](this.models, iterator, context);\n    };\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (fragment) {\n    var args = router._extractParameters(route, fragment);\n    router.execute(callback, args);\n    router.trigger.apply(router, ['route:' + name].concat(args));\n    router.trigger('route', name, args);\n    Backbone.history.trigger('route', router, name, args);\n}",
    "receiverBase": "history",
    "receiverCallee": "route"
  },
  {
    "callback": "function (match, optional) {\n    return optional ? match : '([^/?]+)';\n}",
    "receiverBase": "replace",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (param, i) {\n    if (i === params.length - 1)\n        return param || null;\n    return param ? decodeURIComponent(param) : null;\n}",
    "receiverBase": "_",
    "receiverCallee": "map"
  },
  {
    "callback": "function (handler) {\n    if (handler.route.test(fragment)) {\n        handler.callback(fragment);\n        return true;\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "any"
  },
  {
    "callback": "function () {\n    return oSettings.fnHeaderCallback == null;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    oSession.fnRestore();\n    mPass = -1;\n    bInit = false;\n    $('#example').dataTable({\n        'sAjaxSource': '../../../examples/ajax/sources/arrays.txt',\n        'bDeferRender': true,\n        'fnHeaderCallback': function () {\n            mPass = arguments.length;\n        },\n        'fnInitComplete': function () {\n            bInit = true;\n        }\n    });\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return mPass == 5 && bInit;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    oSession.fnRestore();\n    mPass = 0;\n    bInit = false;\n    $('#example').dataTable({\n        'sAjaxSource': '../../../examples/ajax/sources/arrays.txt',\n        'bDeferRender': true,\n        'fnHeaderCallback': function (nHead, aasData, iStart, iEnd, aiDisplay) {\n            mPass++;\n        },\n        'fnInitComplete': function () {\n            bInit = true;\n        }\n    });\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return mPass == 2 && bInit;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    $('#example_next').click();\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return mPass == 3;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    oSession.fnRestore();\n    $('#example').dataTable({\n        'sAjaxSource': '../../../examples/ajax/sources/arrays.txt',\n        'bDeferRender': true,\n        'fnHeaderCallback': function (nHead, aasData, iStart, iEnd, aiDisplay) {\n            nHead.getElementsByTagName('th')[0].innerHTML = 'Displaying ' + (iEnd - iStart) + ' records';\n        }\n    });\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return $('#example thead th:eq(0)').html() == 'Displaying 10 records';\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    oSession.fnRestore();\n    mPass = true;\n    $('#example').dataTable({\n        'sAjaxSource': '../../../examples/ajax/sources/arrays.txt',\n        'bDeferRender': true,\n        'fnHeaderCallback': function (nHead, aasData, iStart, iEnd, aiDisplay) {\n            if (iStart != 0) {\n                mPass = false;\n            }\n        }\n    });\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return mPass;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    oSession.fnRestore();\n    mPass = false;\n    $('#example').dataTable({\n        'sAjaxSource': '../../../examples/ajax/sources/arrays.txt',\n        'bDeferRender': true,\n        'fnHeaderCallback': function (nHead, aasData, iStart, iEnd, aiDisplay) {\n            if (iStart == 10) {\n                mPass = true;\n            }\n        },\n        'fnInitComplete': function () {\n            $('#example_next').click();\n        }\n    });\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return mPass;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    oSession.fnRestore();\n    mPass = false;\n    $('#example').dataTable({\n        'sAjaxSource': '../../../examples/ajax/sources/arrays.txt',\n        'bDeferRender': true,\n        'fnHeaderCallback': function (nHead, aasData, iStart, iEnd, aiDisplay) {\n            if (iEnd == 20) {\n                mPass = true;\n            }\n        },\n        'fnInitComplete': function () {\n            $('#example_next').click();\n        }\n    });\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return mPass;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    oSession.fnRestore();\n    mPass = false;\n    $('#example').dataTable({\n        'sAjaxSource': '../../../examples/ajax/sources/arrays.txt',\n        'bDeferRender': true,\n        'fnHeaderCallback': function (nHead, aasData, iStart, iEnd, aiDisplay) {\n            if (aiDisplay.length == 57) {\n                mPass = true;\n            }\n        }\n    });\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return mPass;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    oSession.fnRestore();\n    mPass = false;\n    oTable = $('#example').dataTable({\n        'sAjaxSource': '../../../examples/ajax/sources/arrays.txt',\n        'bDeferRender': true,\n        'fnHeaderCallback': function (nHead, aasData, iStart, iEnd, aiDisplay) {\n            if (aiDisplay.length == 9) {\n                mPass = true;\n            }\n        }\n    });\n    oTable.fnFilter('Mozilla');\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function () {\n    return mPass;\n}",
    "receiverBase": "oTest",
    "receiverCallee": "fnWaitTest"
  },
  {
    "callback": "function (key) {\n    if (!attrs[key] && !this.get(key)) {\n        if (!errors) {\n            errors = {};\n        }\n        errors[key] = 'The \"' + key + '\" is required';\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (value, key) {\n    if (value && typeof value === 'object' && value.toJSON) {\n        obj[key] = value.toJSON();\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (Model, key) {\n    if (attributes && attributes[key]) {\n        if (!(attributes[key] instanceof Backbone.Collection)) {\n            if (!children) {\n                children = {};\n            }\n            children[key] = attributes[key];\n            delete attributes[key];\n        }\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (Model, key) {\n    if (!this.get(key)) {\n        var newColl = new Backbone.Collection();\n        this.attributes[key] = newColl;\n        newColl.model = Model;\n        var self = this;\n        newColl.bind('all', function () {\n            self.trigger('change');\n        });\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    self.trigger('change');\n}",
    "receiverBase": "newColl",
    "receiverCallee": "bind"
  },
  {
    "callback": "function (model) {\n    var existing = collection.get(model.id), isLiteral = !(model instanceof this.children[key]);\n    if (isLiteral && key !== 'relationships') {\n        model.dataset = this;\n        delete model.package_id;\n    }\n    if (!existing) {\n        collection.add(model);\n    } else if (existing && isLiteral) {\n        existing.set(model);\n    }\n    ids[model.id] = 1;\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (model) {\n    return !ids[model.id];\n}",
    "receiverBase": "collection",
    "receiverCallee": "select"
  },
  {
    "callback": "function () {\n    tree.expandComplete(node);\n}",
    "receiverBase": "TVAnim",
    "receiverCallee": "getAnim"
  },
  {
    "callback": "function () {\n    tree.collapseComplete(node);\n}",
    "receiverBase": "TVAnim",
    "receiverCallee": "getAnim"
  },
  {
    "callback": "function () {\n    node.dataLoader(node, function () {\n        node.loadComplete();\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    node.loadComplete();\n}",
    "receiverBase": "node",
    "receiverCallee": "dataLoader"
  },
  {
    "callback": "function () {\n    node.tree.root.dataLoader(node, function () {\n        node.loadComplete();\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    node.loadComplete();\n}",
    "receiverBase": "root",
    "receiverCallee": "dataLoader"
  },
  {
    "callback": "function () {\n    return {\n        FADE_IN: 'TVFadeIn',\n        FADE_OUT: 'TVFadeOut',\n        getAnim: function (type, el, callback) {\n            if (YAHOO.widget[type]) {\n                return new YAHOO.widget[type](el, callback);\n            } else {\n                return null;\n            }\n        },\n        isValid: function (type) {\n            return YAHOO.widget[type];\n        }\n    };\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    tvanim.onComplete();\n}",
    "receiverBase": "onComplete",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    tvanim.onComplete();\n}",
    "receiverBase": "onComplete",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function (value) {\n    switch (value) {\n    case '<':\n        return '&lt;';\n    case '>':\n        return '&gt;';\n    case '\"':\n        return '&quot;';\n    case '\\'':\n        return '&apos;';\n    case '&':\n        return '&amp;';\n    }\n}",
    "receiverBase": "text",
    "receiverCallee": "replace"
  },
  {
    "callback": "function () {\n    YUITest.TestRunner._run();\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    YUITest.TestRunner._resumeTest(thrown.segment);\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    YUITest.TestRunner._run();\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    throw error;\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "_resumeTest"
  },
  {
    "callback": "function () {\n    YUITest.TestRunner._run();\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (name) {\n    return function () {\n        YUITest.Assert.fail('Method ' + name + '() was called but was not expected to be.');\n    };\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n}",
    "receiverBase": "Mock",
    "receiverCallee": "Value"
  },
  {
    "callback": "function (item, name) {\n    var name = name.replace('Test', '');\n    Y.Test[name] = item;\n}",
    "receiverBase": "Object",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    expect(received1).toBe('a');\n    expect(received2).toBe('b');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    expect(receivedRest).toEqual([\n        'c',\n        'd',\n        'e',\n        'f'\n    ]);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var received1 = 'not yet set';\n    function f(r1) {\n        received1 = r1;\n    }\n    var varargsSpy = varArgs(f);\n    varargsSpy('a', 'b', 'c', 'd', 'e', 'f');\n    expect(received1).toEqual([\n        'a',\n        'b',\n        'c',\n        'd',\n        'e',\n        'f'\n    ]);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var varargsTestFn = varArgs(function () {\n            return 'expected';\n        });\n    expect(varargsTestFn()).toBe('expected');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    return 'expected';\n}",
    "receiverBase": "",
    "receiverCallee": "varArgs"
  },
  {
    "callback": "function () {\n    var composed = compose(dub, inc, half);\n    expect(composed(2)).toBe(4);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var composed = compose(inc, div);\n    expect(composed(10, 2)).toBe(6);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var list = cons({ a: 1 }, emptyList);\n    expect(compose(attr('a'), head)(list)).toBe(1);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    expect(compose(div)(20, 5)).toBe(4);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var id = compose();\n    expect(id(2)).toBe(2);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var composed = compose2(dub, inc);\n    expect(composed(2)).toBe(6);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var composed = compose2(inc, div);\n    expect(composed(10, 2)).toBe(6);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var list = cons({ a: 1 }, emptyList);\n    expect(compose2(attr('a'), head)(list)).toBe(1);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var expectedScope = {};\n    function f() {\n        expect(this).toBe(expectedScope);\n    }\n    var composed = compose2(f, f);\n    composed.apply(expectedScope);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var getA = attr('A');\n    expect(getA({ A: 'B' })).toBe('B');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var getLength = attr('length');\n    expect(getLength('hello')).toBe(5);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var getLength = attr(0);\n    expect(getLength([\n        'a',\n        'b',\n        'c'\n    ])).toBe('a');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  }
]