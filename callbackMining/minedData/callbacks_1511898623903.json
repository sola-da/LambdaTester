[
  {
    "callback": "function () {\n    if (!_self.inuse) {\n        if (_self.lastChoose) {\n            _self.current = _self.lastChoose;\n            _self.lastChoose = null;\n            _self.$refresh();\n        }\n        clearInterval(_self.tmrShowLast);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "setInterval"
  },
  {
    "callback": "function () {\n    _self.play = true;\n    if (_self.inuse)\n        return;\n    _self.$Next();\n}",
    "receiverBase": "",
    "receiverCallee": "setInterval"
  },
  {
    "callback": "function () {\n    if (checkWH[0] && checkWH[1]) {\n        clearInterval(_self.tmrIsResized);\n        _self.oImage.style.display = 'block';\n        _self.oImage.style.width = _imgWidth + 'px';\n        _self.oImage.style.height = _imgHeight + 'px';\n        apf.tween.single(_self.oImage, {\n            steps: 2,\n            type: 'fade',\n            from: 0,\n            to: 1\n        });\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "setInterval"
  },
  {
    "callback": "function () {\n    _self.$tPrevious();\n}",
    "receiverBase": "",
    "receiverCallee": "setInterval"
  },
  {
    "callback": "function () {\n    _self.$tNext();\n}",
    "receiverBase": "",
    "receiverCallee": "setInterval"
  },
  {
    "callback": "function () {\n    _self.$refresh();\n    clearInterval(_self.tmrOnScroll);\n}",
    "receiverBase": "",
    "receiverCallee": "setInterval"
  },
  {
    "callback": "function () {\n    _self.$refresh();\n    clearInterval(_self.tmrKeyDown);\n}",
    "receiverBase": "",
    "receiverCallee": "setInterval"
  },
  {
    "callback": "function () {\n    return false;\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "addEventListener"
  },
  {
    "callback": "function (err, stdout, stderr) {\n    if (err) {\n        console.log('child process exited with error code', err.code);\n        return;\n    }\n    console.log(stdout);\n}",
    "receiverBase": "",
    "receiverCallee": "exec"
  },
  {
    "callback": "function (pos) {\n    start_positions[pos.n] = {\n        'x': (pos.p[0] + 30) / phys_scale,\n        'y': (pos.p[1] + 30) / phys_scale,\n        'angle': pos.a\n    };\n}",
    "receiverBase": "start_positions",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (wp) {\n    ai_waypoints[wp.n] = {\n        'x': (wp.p[0] + 20) / phys_scale,\n        'y': (wp.p[1] + 20) / phys_scale\n    };\n}",
    "receiverBase": "ai_waypoints",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (c) {\n    pt1 = [\n        c.p[0] / phys_scale,\n        c.p[1] / phys_scale\n    ];\n    pt2 = [\n        (c.p[0] + 280) / phys_scale,\n        (c.p[1] + 280) / phys_scale\n    ];\n    ;\n    checkpoints[c.n] = {\n        'pt1': pt1,\n        'pt2': pt2,\n        'width': pt2[0] - pt1[0],\n        'height': pt2[1] - pt1[1],\n        'center': [\n            (pt1[0] + pt2[0]) / 2,\n            (pt1[1] + pt2[1]) / 2\n        ]\n    };\n}",
    "receiverBase": "checkpoints",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (val, index) {\n    rval = f.call(opt_obj, rval, val, index, arr);\n}",
    "receiverBase": "array",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (val, index) {\n    rval = f.call(opt_obj, rval, val, index, arr);\n}",
    "receiverBase": "array",
    "receiverCallee": "forEachRight"
  },
  {
    "callback": "function (a, b) {\n    return compare(a[key], b[key]);\n}",
    "receiverBase": "array",
    "receiverCallee": "sort"
  },
  {
    "callback": "function () {\n    $('#container').highcharts('StockChart', {\n        rangeSelector: { selected: 1 },\n        series: [{\n                name: 'USD to EUR',\n                data: usdeur\n            }]\n    });\n    $('#button').click(function () {\n        var chart = $('#container').highcharts();\n        chart.xAxis[0].setExtremes(Date.UTC(2007, 0, 1), Date.UTC(2007, 11, 31));\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "$"
  },
  {
    "callback": "function () {\n    var chart = $('#container').highcharts();\n    chart.xAxis[0].setExtremes(Date.UTC(2007, 0, 1), Date.UTC(2007, 11, 31));\n}",
    "receiverBase": "$",
    "receiverCallee": "click"
  }
]