[
  {
    "callback": "function () {\n    timer.action();\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    timer.go();\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    var html = converter.asHtml({\n            text: 'Lorem ipsum dolor.',\n            type: 'paragraph'\n        });\n    expect(html).toBe('Lorem ipsum dolor.');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (ev) {\n    if (ev.source === window && ev.data === 'browserify-tick') {\n        ev.stopPropagation();\n        if (queue.length > 0) {\n            var fn = queue.shift();\n            fn();\n        }\n    }\n}",
    "receiverBase": "window",
    "receiverCallee": "addEventListener"
  },
  {
    "callback": "function (p) {\n    return !!p;\n}",
    "receiverBase": "",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (p) {\n    return !!p;\n}",
    "receiverBase": "",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (p, index) {\n    return p && typeof p === 'string';\n}",
    "receiverBase": "",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    module.exports = {\n        'main': 'index.js',\n        'browserify': 'browser.js'\n    };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function g() {\n    self.removeListener(type, g);\n    listener.apply(this, arguments);\n}",
    "receiverBase": "self",
    "receiverCallee": "on"
  },
  {
    "callback": "function (line) {\n    return '  ' + line;\n}",
    "receiverBase": "split",
    "receiverCallee": "map"
  },
  {
    "callback": "function (line) {\n    return '   ' + line;\n}",
    "receiverBase": "split",
    "receiverCallee": "map"
  },
  {
    "callback": "function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0)\n        numLinesEst++;\n    return prev + cur.length + 1;\n}",
    "receiverBase": "output",
    "receiverCallee": "reduce"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    module.exports = { 'main': 'sockjs.js' };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function (a) {\n    var b = meta[a];\n    return typeof b == 'string' ? b : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n}",
    "receiverBase": "a",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (a) {\n    return '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n}",
    "receiverBase": "text",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (a) {\n    return json_lookup[a];\n}",
    "receiverBase": "string",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (a) {\n    unrolled[a] = '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    return '';\n}",
    "receiverBase": "join",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (a) {\n    return extra_lookup[a];\n}",
    "receiverBase": "quoted",
    "receiverCallee": "replace"
  },
  {
    "callback": "function () {\n    if (iframe) {\n        iframe.parentNode.removeChild(iframe);\n    }\n    iframe = null;\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    onerror('onload timeout');\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    onerror('timeout');\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    onerror('timeout');\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    that._cleanup(true);\n}",
    "receiverBase": "utils",
    "receiverCallee": "unload_add"
  },
  {
    "callback": "function () {\n    that._start.apply(that, args);\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    that._start(method, url, payload, { no_credentials: true });\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    that._start(method, url, payload);\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    that._cleanup(true);\n}",
    "receiverBase": "utils",
    "receiverCallee": "unload_add"
  },
  {
    "callback": "function () {\n    that.dispatchEvent(close_event);\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    that._try_next_protocol();\n}",
    "receiverBase": "utils",
    "receiverCallee": "attachEvent"
  },
  {
    "callback": "function () {\n    if (that.readyState === SockJS.CONNECTING) {\n        that._didClose(2007, 'Transport timeouted');\n    }\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    that.ws.close();\n}",
    "receiverBase": "utils",
    "receiverCallee": "unload_add"
  },
  {
    "callback": "function () {\n    that.send_stop = null;\n    that.send_schedule();\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    that.send_stop = null;\n    that.send_schedule_wait();\n}",
    "receiverBase": "that",
    "receiverCallee": "sender"
  },
  {
    "callback": "function () {\n    iframe.parentNode.removeChild(iframe);\n    iframe = null;\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    if (!loaded_okay) {\n        close_script(utils.closeFrame(1006, 'JSONP script loaded abnormally (onerror)'));\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    close_script(utils.closeFrame(1006, 'JSONP script loaded abnormally (timeout)'));\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (r) {\n    that.ri._didClose(1006, 'Unable to load an iframe (' + r + ')');\n}",
    "receiverBase": "utils",
    "receiverCallee": "createIframe"
  },
  {
    "callback": "function () {\n    that.doXhr(base_url, AjaxObject);\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    xo.ontimeout();\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    that.emit('finish', {}, 2000);\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function () {\n    that.dispatchEvent(new SimpleEvent('close', { reason: reason }));\n}",
    "receiverBase": "utils",
    "receiverCallee": "delay"
  },
  {
    "callback": "function (e) {\n    that.iframe_close({}, 'permanent');\n}",
    "receiverBase": "",
    "receiverCallee": "constructor"
  },
  {
    "callback": "function () {\n    return SockJS;\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    module.exports = {\n        'main': './index.js',\n        'browserify': 'browser.js'\n    };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    var dnode = require('./lib/dnode');\n    module.exports = function (cons, opts) {\n        return new dnode(cons, opts);\n    };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function () {\n    for (var key in Stream.prototype) {\n        dnode.prototype[key] = Stream.prototype[key];\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    if (self._ended)\n        return;\n    self.proto = self._createProto();\n    self.proto.start();\n    if (!self._handleQueue)\n        return;\n    for (var i = 0; i < self._handleQueue.length; i++) {\n        self.handle(self._handleQueue[i]);\n    }\n}",
    "receiverBase": "process",
    "receiverCallee": "nextTick"
  },
  {
    "callback": "function (remote) {\n    if (self._ended)\n        return;\n    var ref = self.cons.call(this, remote, self);\n    if (typeof ref !== 'object')\n        ref = this;\n    self.emit('local', ref, self);\n    return ref;\n}",
    "receiverBase": "",
    "receiverCallee": "protocol"
  },
  {
    "callback": "function (remote) {\n    self.emit('remote', remote, self);\n    self.emit('ready');\n}",
    "receiverBase": "proto",
    "receiverCallee": "on"
  },
  {
    "callback": "function (req) {\n    if (!self.readable)\n        return;\n    if (self.opts.emit === 'object') {\n        self.emit('data', req);\n    } else\n        self.emit('data', json.stringify(req) + '\\n');\n}",
    "receiverBase": "proto",
    "receiverCallee": "on"
  },
  {
    "callback": "function (err) {\n    self.emit('fail', err);\n}",
    "receiverBase": "proto",
    "receiverCallee": "on"
  },
  {
    "callback": "function (err) {\n    self.emit('error', err);\n}",
    "receiverBase": "proto",
    "receiverCallee": "on"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    module.exports = { 'main': './index.js' };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function () {\n    for (var key in EventEmitter.prototype) {\n        Proto.prototype[key] = EventEmitter.prototype[key];\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (id) {\n    if (self.callbacks.remote[id] === undefined) {\n        var cb = function () {\n            self.request(id, [].slice.apply(arguments));\n        };\n        self.callbacks.remote[id] = self.wrap ? self.wrap(cb, id) : cb;\n        return cb;\n    }\n    return self.unwrap ? self.unwrap(self.callbacks.remote[id], id) : self.callbacks.remote[id];\n}",
    "receiverBase": "scrubber",
    "receiverCallee": "unscrub"
  },
  {
    "callback": "function (id) {\n    delete self.callbacks.local[id];\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (key) {\n    delete self.remote[key];\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (key) {\n    self.remote[key] = methods[key];\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (sid) {\n    var id = parseInt(sid, 10);\n    var path = msg.callbacks[id];\n    traverse.set(args, path, f(id));\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (link) {\n    var value = traverse.get(args, link.from);\n    traverse.set(args, link.to, value);\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    module.exports = { 'main': 'index.js' };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function (x) {\n    if (!this.isRoot || !skip) {\n        acc = cb.call(this, acc, x);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (x) {\n    acc.push(this.path);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (x) {\n    acc.push(this.node);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function clone(src) {\n    for (var i = 0; i < parents.length; i++) {\n        if (parents[i] === src) {\n            return nodes[i];\n        }\n    }\n    if (typeof src === 'object' && src !== null) {\n        var dst = copy(src);\n        parents.push(src);\n        nodes.push(dst);\n        forEach(objectKeys(src), function (key) {\n            dst[key] = clone(src[key]);\n        });\n        parents.pop();\n        nodes.pop();\n        return dst;\n    } else {\n        return src;\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (key) {\n    dst[key] = clone(src[key]);\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (key, i) {\n    path.push(key);\n    if (modifiers.pre)\n        modifiers.pre.call(state, state.node[key], key);\n    var child = walker(state.node[key]);\n    if (immutable && hasOwnProperty.call(state.node, key)) {\n        state.node[key] = child.node;\n    }\n    child.isLast = i == state.keys.length - 1;\n    child.isFirst = i == 0;\n    if (modifiers.post)\n        modifiers.post.call(state, child);\n    path.pop();\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (key) {\n    dst[key] = src[key];\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (key) {\n    traverse[key] = function (obj) {\n        var args = [].slice.call(arguments, 1);\n        var t = new Traverse(obj);\n        return t[key].apply(t, args);\n    };\n}",
    "receiverBase": "",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    module.exports = Object.keys || function (obj) {\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    module.exports = function forEach(xs, f) {\n        if (xs.forEach)\n            return xs.forEach(f);\n        for (var i = 0; i < xs.length; i++) {\n            f.call(xs, xs[i], i);\n        }\n    };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    var objectKeys = require('./keys');\n    module.exports = function (obj, key) {\n        if (Object.prototype.propertyIsEnumerable) {\n            return Object.prototype.propertyIsEnumerable.call(obj, key);\n        }\n        var keys = objectKeys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (key === keys[i])\n                return true;\n        }\n        return false;\n    };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    module.exports = { 'main': 'index.js' };\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function (require, module, exports, __dirname, __filename) {\n    exports.parse = require('./lib/parse');\n    exports.stringify = require('./lib/stringify');\n}",
    "receiverBase": "require",
    "receiverCallee": "define"
  },
  {
    "callback": "function walk(holder, key) {\n    var k, v, value = holder[key];\n    if (value && typeof value === 'object') {\n        for (k in value) {\n            if (Object.prototype.hasOwnProperty.call(value, k)) {\n                v = walk(value, k);\n                if (v !== undefined) {\n                    value[k] = v;\n                } else {\n                    delete value[k];\n                }\n            }\n        }\n    }\n    return reviver.call(holder, key, value);\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (a) {\n    var c = meta[a];\n    return typeof c === 'string' ? c : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n}",
    "receiverBase": "string",
    "receiverCallee": "replace"
  },
  {
    "callback": "function () {\n    return this.get('container').lookup('serializer:ember_graph');\n}",
    "receiverBase": "Em",
    "receiverCallee": "computed"
  },
  {
    "callback": "function (payload) {\n    return _this.deserialize(payload, serializerOptions);\n}",
    "receiverBase": "serverCreateRecord",
    "receiverCallee": "then"
  },
  {
    "callback": "function (payload) {\n    return _this.deserialize(payload, serializerOptions);\n}",
    "receiverBase": "serverFindRecord",
    "receiverCallee": "then"
  },
  {
    "callback": "function (payload) {\n    return _this.deserialize(payload, serializerOptions);\n}",
    "receiverBase": "serverFindMany",
    "receiverCallee": "then"
  },
  {
    "callback": "function (payload) {\n    return _this.deserialize(payload, serializerOptions);\n}",
    "receiverBase": "serverFindAll",
    "receiverCallee": "then"
  },
  {
    "callback": "function (payload) {\n    return _this.deserialize(payload, serializerOptions);\n}",
    "receiverBase": "serverUpdateRecord",
    "receiverCallee": "then"
  },
  {
    "callback": "function (payload) {\n    return _this.deserialize(payload, serializerOptions);\n}",
    "receiverBase": "serverDeleteRecord",
    "receiverCallee": "then"
  },
  {
    "callback": "function () {\n    {\n        {\n            body;\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "$"
  },
  {
    "callback": "function (tx) {\n    tx.executeSql('CREATE TABLE IF NOT EXISTS ' + that.table + ' (id NVARCHAR(32) UNIQUE PRIMARY KEY, value TEXT, timestamp REAL)', [], opts.callback, that.onError);\n}",
    "receiverBase": "db",
    "receiverCallee": "transaction"
  },
  {
    "callback": "function (t) {\n    t.executeSql('UPDATE ' + that.table + ' SET value=?, timestamp=? WHERE id=?', [\n        that.serialize(obj),\n        that.now(),\n        id\n    ], function () {\n        if (callback != undefined) {\n            obj.key = id;\n            that.terseToVerboseCallback(callback)(obj);\n        }\n    }, that.onError);\n}",
    "receiverBase": "db",
    "receiverCallee": "transaction"
  },
  {
    "callback": "function () {\n    if (callback != undefined) {\n        obj.key = id;\n        that.terseToVerboseCallback(callback)(obj);\n    }\n}",
    "receiverBase": "t",
    "receiverCallee": "executeSql"
  },
  {
    "callback": "function (t) {\n    var id = obj.key == undefined ? that.uuid() : obj.key;\n    delete obj.key;\n    t.executeSql('INSERT INTO ' + that.table + ' (id, value,timestamp) VALUES (?,?,?)', [\n        id,\n        that.serialize(obj),\n        that.now()\n    ], function () {\n        if (callback != undefined) {\n            obj.key = id;\n            that.terseToVerboseCallback(callback)(obj);\n        }\n    }, that.onError);\n}",
    "receiverBase": "db",
    "receiverCallee": "transaction"
  },
  {
    "callback": "function () {\n    if (callback != undefined) {\n        obj.key = id;\n        that.terseToVerboseCallback(callback)(obj);\n    }\n}",
    "receiverBase": "t",
    "receiverCallee": "executeSql"
  },
  {
    "callback": "function (r) {\n    var isUpdate = r != null;\n    if (isUpdate) {\n        var id = obj.key;\n        delete obj.key;\n        update(id, obj, callback);\n    } else {\n        insert(obj, callback);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "get"
  },
  {
    "callback": "function (t) {\n    t.executeSql('SELECT value FROM ' + that.table + ' WHERE id = ?', [key], function (tx, results) {\n        if (results.rows.length == 0) {\n            that.terseToVerboseCallback(callback)(null);\n        } else {\n            var o = that.deserialize(results.rows.item(0).value);\n            o.key = key;\n            that.terseToVerboseCallback(callback)(o);\n        }\n    }, this.onError);\n}",
    "receiverBase": "db",
    "receiverCallee": "transaction"
  },
  {
    "callback": "function (tx, results) {\n    if (results.rows.length == 0) {\n        that.terseToVerboseCallback(callback)(null);\n    } else {\n        var o = that.deserialize(results.rows.item(0).value);\n        o.key = key;\n        that.terseToVerboseCallback(callback)(o);\n    }\n}",
    "receiverBase": "t",
    "receiverCallee": "executeSql"
  },
  {
    "callback": "function (tx, results) {\n    if (results.rows.length == 0) {\n        cb([]);\n    } else {\n        var r = [];\n        for (var i = 0, l = results.rows.length; i < l; i++) {\n            var raw = results.rows.item(i).value;\n            var obj = that.deserialize(raw);\n            obj.key = results.rows.item(i).id;\n            r.push(obj);\n        }\n        cb(r);\n    }\n}",
    "receiverBase": "t",
    "receiverCallee": "executeSql"
  },
  {
    "callback": "function (tx, results) {\n    if (results.rows.length == 0) {\n        cb([]);\n    } else {\n        var r = [];\n        for (var i = 0, l = results.rows.length; i < l; i++) {\n            var raw = results.rows.item(i).value;\n            var obj = that.deserialize(raw);\n            obj.key = results.rows.item(i).id;\n            r.push(obj);\n        }\n        cb(r);\n    }\n}",
    "receiverBase": "t",
    "receiverCallee": "executeSql"
  },
  {
    "callback": "function (t) {\n    t.executeSql('DELETE FROM ' + that.table + ' WHERE id = ?', [typeof keyOrObj == 'string' ? keyOrObj : keyOrObj.key], callback || that.onData, that.onError);\n}",
    "receiverBase": "db",
    "receiverCallee": "transaction"
  },
  {
    "callback": "function (tx) {\n    tx.executeSql('DELETE FROM ' + that.table, [], callback || that.onData, that.onError);\n}",
    "receiverBase": "db",
    "receiverCallee": "transaction"
  },
  {
    "callback": "function (n) {\n    var raw = Y.Node.getDOMNode(n);\n    if (raw.style[FONT_FAMILY]) {\n        classNames['.' + n._yuid] = raw.style[FONT_FAMILY];\n        n.addClass(n._yuid);\n        Y.EditorSelection.removeFontFamily(raw);\n    }\n}",
    "receiverBase": "nodes",
    "receiverCallee": "each"
  },
  {
    "callback": "function (v, k) {\n    cssString += k + ' { font-family: ' + v.replace(/\"/gi, '') + '; }';\n}",
    "receiverBase": "Y",
    "receiverCallee": "each"
  },
  {
    "callback": "function (n, k) {\n    var t = n.get('tagName').toLowerCase(), newTag = 'i';\n    if (t === 'strong') {\n        newTag = 'b';\n    }\n    Y.EditorSelection.prototype._swap(baseNodes.item(k), newTag);\n}",
    "receiverBase": "baseNodes",
    "receiverCallee": "each"
  },
  {
    "callback": "function (v, k) {\n    var lis = v.all('li');\n    if (!lis.size()) {\n        v.remove();\n    }\n}",
    "receiverBase": "ls",
    "receiverCallee": "each"
  },
  {
    "callback": "function (p) {\n    var html = p.get('innerHTML');\n    if (html === '') {\n        Y.log('Empty Paragraph Tag Found, Removing It', 'info', 'editor-selection');\n        p.remove();\n    }\n}",
    "receiverBase": "single",
    "receiverCallee": "each"
  },
  {
    "callback": "function (n) {\n    if (n.hasClass(n._yuid)) {\n        n.setStyle(FONT_FAMILY, n.getStyle(FONT_FAMILY));\n        n.removeClass(n._yuid);\n        if (n.getAttribute('class') === '') {\n            n.removeAttribute('class');\n        }\n    }\n}",
    "receiverBase": "nodes",
    "receiverCallee": "each"
  },
  {
    "callback": "function (n) {\n    if (!n.hasClass('yui-skip') && n.get('innerHTML') === '') {\n        n.remove();\n    } else {\n        n.removeClass('yui-non').removeClass('yui-skip');\n    }\n}",
    "receiverBase": "nons",
    "receiverCallee": "each"
  },
  {
    "callback": "function (n) {\n    if (n.get('id').indexOf('yui_3_') === 0) {\n        n.removeAttribute('id');\n        n.removeAttribute('_yuid');\n    }\n}",
    "receiverBase": "ids",
    "receiverCallee": "each"
  },
  {
    "callback": "function (b) {\n    var c = b.get('parentNode.parentNode.childNodes'), html;\n    if (c.size()) {\n        b.remove();\n    } else {\n        html = Y.EditorSelection.getText(c.item(0));\n        if (html !== '') {\n            b.remove();\n        }\n    }\n}",
    "receiverBase": "cur",
    "receiverCallee": "each"
  },
  {
    "callback": "function (n, k) {\n    if (n.getStyle(FONT_FAMILY) == Y.EditorSelection.TMP) {\n        n.setStyle(FONT_FAMILY, '');\n        Y.EditorSelection.removeFontFamily(n);\n        if (!n.test('body')) {\n            items.push(Y.Node.getDOMNode(nodes.item(k)));\n        }\n    }\n}",
    "receiverBase": "nodes",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    inHTML.set('id', '');\n    inHTML.replace(newNode);\n    if (range.moveToElementText) {\n        range.moveToElementText(Y.Node.getDOMNode(newNode));\n    }\n    range.collapse(false);\n    range.select();\n}",
    "receiverBase": "Y",
    "receiverCallee": "on"
  },
  {
    "callback": "function (n, k) {\n    var t = n.get('tagName').toLowerCase();\n    if (t === 'font') {\n        changed.push(this._swap(items.item(k), tag));\n    } else {\n        changed.push(this._wrap(items.item(k), tag));\n    }\n}",
    "receiverBase": "items",
    "receiverCallee": "each"
  },
  {
    "callback": "function (c) {\n    this.selectNode(c, collapse, end);\n}",
    "receiverBase": "cur",
    "receiverCallee": "each"
  },
  {
    "callback": "function (column, rowIndex) {\n    column.columns = column.children.map(function (row, columnIndex) {\n        row.gridString = rowIndex + 1 + 'x' + (columnIndex + 1);\n        return row;\n    });\n    return column;\n}",
    "receiverBase": "children",
    "receiverCallee": "map"
  },
  {
    "callback": "function (row, columnIndex) {\n    row.gridString = rowIndex + 1 + 'x' + (columnIndex + 1);\n    return row;\n}",
    "receiverBase": "children",
    "receiverCallee": "map"
  },
  {
    "callback": "function (_, stateValue) {\n    if (stateValue) {\n        _this.show();\n        return;\n    }\n    _this.hide();\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    var gridString = jQuery(this).data('gridstring');\n    _this.onSelect(gridString);\n}",
    "receiverBase": "find",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    var gridString = jQuery(this).data('gridstring');\n    _this.onHover(gridString);\n}",
    "receiverBase": "find",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    _this.element.find('.grid-item').removeClass('hovered');\n    _this.element.find('.grid-instructions').show();\n    _this.element.find('.grid-text').hide();\n}",
    "receiverBase": "find",
    "receiverCallee": "on"
  },
  {
    "callback": "function (index) {\n    var element = jQuery(this);\n    var change = element.data('gridstring').charAt(0) <= highestRow && element.data('gridstring').charAt(2) <= highestColumn;\n    return change;\n}",
    "receiverBase": "gridItems",
    "receiverCallee": "filter"
  },
  {
    "callback": "function () {\n    if (!!Settings.get('kadiraAppId') && !!Settings.get('kadiraAppSecret')) {\n        Kadira.connect(Settings.get('kadiraAppId'), Settings.get('kadiraAppSecret'));\n    }\n}",
    "receiverBase": "Meteor",
    "receiverCallee": "startup"
  },
  {
    "callback": "function () {\n    'use strict';\n    angular.module('stringFilters', []).filter('maxLength', function () {\n        return function (input, length) {\n            if (!input)\n                return '';\n            if (!angular.isString(input))\n                input = input.toString();\n            length = length || 10;\n            return input.length > length ? input.substr(0, length) + '...' : input;\n        };\n    });\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return function (input, length) {\n        if (!input)\n            return '';\n        if (!angular.isString(input))\n            input = input.toString();\n        length = length || 10;\n        return input.length > length ? input.substr(0, length) + '...' : input;\n    };\n}",
    "receiverBase": "module",
    "receiverCallee": "filter"
  }
]