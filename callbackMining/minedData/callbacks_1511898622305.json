[
  {
    "callback": "function () {\n    action(model.get(propertyName));\n}",
    "receiverBase": "model",
    "receiverCallee": "addPropertiesListener"
  },
  {
    "callback": "function () {\n    return mockXhr;\n}",
    "receiverBase": "stubs",
    "receiverCallee": "set"
  },
  {
    "callback": "function () {\n    mockXhr.onerror();\n}",
    "receiverBase": "expectRequest",
    "receiverCallee": "$does"
  },
  {
    "callback": "function (error) {\n    assertNotNullNorUndefined(error);\n    assertEquals(1, arguments.length);\n}",
    "receiverBase": "",
    "receiverCallee": "callbackHelper"
  },
  {
    "callback": "function () {\n    mockXhr.status = 200;\n    mockXhr.responseText = '';\n    mockXhr.onload();\n}",
    "receiverBase": "expectRequest",
    "receiverCallee": "$does"
  },
  {
    "callback": "function (e, response) {\n    assertNull(e);\n    assertEquals(200, response.status);\n    assertEquals('', response.body);\n    webdriver.test.testutil.assertObjectEquals({\n        'a': 'b',\n        'c': 'd',\n        'e': 'f',\n        'g': 'h'\n    }, response.headers);\n}",
    "receiverBase": "",
    "receiverCallee": "callbackHelper"
  },
  {
    "callback": "function () {\n    mockXhr.status = 200;\n    mockXhr.responseText = '';\n    mockXhr.onload();\n}",
    "receiverBase": "expectRequest",
    "receiverCallee": "$does"
  },
  {
    "callback": "function (e, response) {\n    assertNull(e);\n    assertEquals(200, response.status);\n    assertEquals('', response.body);\n    webdriver.test.testutil.assertObjectEquals({\n        'a': 'b',\n        'c': 'd',\n        'e': 'f',\n        'g': 'h'\n    }, response.headers);\n}",
    "receiverBase": "",
    "receiverCallee": "callbackHelper"
  },
  {
    "callback": "function () {\n    mockXhr.status = 200;\n    mockXhr.responseText = '';\n    mockXhr.onload();\n}",
    "receiverBase": "expectRequest",
    "receiverCallee": "$does"
  },
  {
    "callback": "function (e, response) {\n    assertNull(e);\n    assertEquals(200, response.status);\n    assertEquals('', response.body);\n    webdriver.test.testutil.assertObjectEquals({}, response.headers);\n}",
    "receiverBase": "",
    "receiverCallee": "callbackHelper"
  },
  {
    "callback": "function () {\n    mockXhr.status = 200;\n    mockXhr.responseText = '\\0foo\\0\\0bar\\0';\n    mockXhr.onload();\n}",
    "receiverBase": "expectRequest",
    "receiverCallee": "$does"
  },
  {
    "callback": "function (e, response) {\n    assertNull(e);\n    assertEquals(200, response.status);\n    assertEquals('foobar', response.body);\n    webdriver.test.testutil.assertObjectEquals({}, response.headers);\n}",
    "receiverBase": "",
    "receiverCallee": "callbackHelper"
  },
  {
    "callback": "function (event) {\n    halfWidth = window.innerWidth / 2;\n    halfHeight = window.innerHeight / 2;\n    CATAN.Game.renderer.setSize(window.innerWidth, window.innerHeight);\n    if (CATAN.Game.cameraSkybox) {\n        CATAN.Game.cameraSkybox.aspect = window.innerWidth / window.innerHeight;\n        CATAN.Game.cameraSkybox.updateProjectionMatrix();\n    }\n    CATAN.Game.camera.aspect = window.innerWidth / window.innerHeight;\n    CATAN.Game.camera.updateProjectionMatrix();\n}",
    "receiverBase": "window",
    "receiverCallee": "addEventListener"
  },
  {
    "callback": "function (templateContent) {\n    if (templateProcessorCallback != null) {\n        templateContent = templateProcessorCallback(templateName, templateContent);\n    }\n    if (templateContent != null) {\n        return $.template(templateName, templateContent);\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "get"
  },
  {
    "callback": "function () {\n    loadedTemplates.push(template);\n    if (loadedTemplates.length === templateCount) {\n        return deferred.resolve();\n    }\n}",
    "receiverBase": "get",
    "receiverCallee": "success"
  },
  {
    "callback": "function (error) {\n    return deferred.reject(error);\n}",
    "receiverBase": "success",
    "receiverCallee": "error"
  },
  {
    "callback": "function (templateName, templateContent) {\n    if (templateProcessorCallback != null) {\n        templateContent = templateProcessorCallback(templateName, templateContent);\n    }\n    if (templateContent != null && document.getElementById(templateName) == null) {\n        selectedElement.append('<script id=\"' + templateName + '\" type=\"text/x-jquery-tmpl\">' + templateContent + '</script>');\n    }\n    if (compile) {\n        return templateContent;\n    } else {\n        return null;\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "loadTemplates"
  },
  {
    "callback": "function () {\n    self.on();\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (bSuccess, sMessage) {\n    if (typeof sMessage == 'undefined') {\n        sMessage = null;\n    }\n    self.handleEvent('swf', bSuccess, sMessage);\n}",
    "receiverBase": "self",
    "receiverCallee": "testURL"
  },
  {
    "callback": "function () {\n    'use strict';\n    function noop(msg) {\n        return msg;\n    }\n    var gettext = window.gettext || noop;\n    return { gettext: gettext };\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (watcher) {\n    return watcher.callback(event, info);\n}",
    "receiverBase": "filter",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    os.change(file).then(d.resolve, d.resolve);\n}",
    "receiverBase": "fs",
    "receiverCallee": "writeFile"
  },
  {
    "callback": "function () {\n    os.create(file).then(d.resolve, d.resolve);\n}",
    "receiverBase": "fs",
    "receiverCallee": "writeFile"
  },
  {
    "callback": "function () {\n    os.rm(file).then(d.resolve, d.resolve);\n}",
    "receiverBase": "fs",
    "receiverCallee": "unlink"
  },
  {
    "callback": "function () {\n    os.mkdir(file).then(d.resolve, d.resolve);\n}",
    "receiverBase": "fs",
    "receiverCallee": "mkdir"
  },
  {
    "callback": "function () {\n    os.rmdir(file).then(d.resolve, d.resolve);\n}",
    "receiverBase": "fs",
    "receiverCallee": "rmdir"
  },
  {
    "callback": "function () {\n    if (settingChange)\n        return;\n    editor.setValue(model.get(path) || '', -1);\n}",
    "receiverBase": "model",
    "receiverCallee": "listenTo"
  },
  {
    "callback": "function (e) {\n    editor.resize();\n}",
    "receiverBase": "_",
    "receiverCallee": "debounce"
  },
  {
    "callback": "function () {\n    if (moduleName) {\n        if (!modules[moduleName]) {\n            return f.fail('no module found with name ' + moduleName);\n        }\n        handleModule(modules[moduleName], f());\n    } else {\n        for (var name in modules) {\n            if (modules[name].isDependency) {\n                handleModule(modules[name], f());\n            }\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "ff"
  },
  {
    "callback": "function () {\n    if (isJSON) {\n        console.log(stringify(res));\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "ff"
  },
  {
    "callback": "function (err, info) {\n    if (err) {\n        return cb && cb(err);\n    }\n    if (isJSON) {\n        res[moduleName] = info.versions;\n    } else {\n        console.log(info.versions.map(function (version) {\n            return version == info.current ? chalk.yellow(version) : version;\n        }).join('\\t'));\n    }\n    cb && cb();\n}",
    "receiverBase": "Module",
    "receiverCallee": "getVersions"
  },
  {
    "callback": "function (version) {\n    return version == info.current ? chalk.yellow(version) : version;\n}",
    "receiverBase": "versions",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    stop();\n    var _box = e._$get('pagebox');\n    var _pg = e._$page(_box, {\n            event: 'click',\n            index: 9,\n            total: 10,\n            onchange: function (_obj) {\n                ok(true, 'last page is :' + _obj.last + ' index page is:' + _obj.index + 'total:' + _obj.total);\n                start();\n            }\n        });\n    _pg._$setIndex(10);\n    _pg._$setTotal(20);\n    _pg._$updatePage(5, 10);\n}",
    "receiverBase": "",
    "receiverCallee": "test"
  },
  {
    "callback": "function () {\n    expect(0);\n    define('{pro}pager.test.js', [\n        'ui/pager/pager',\n        'util/page/page.simple',\n        'util/page/page'\n    ], f);\n}",
    "receiverBase": "",
    "receiverCallee": "test"
  }
]