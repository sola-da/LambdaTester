[
  {
    "callback": "function () {\n    equals(sprocket.get('createdAt'), d1, 'reading a DateTime should return the correct SC.DateTime object');\n    equals(sprocket.get('frenchCreatedAt'), d2, 'reading a DateTime with a custom format should return the correct SC.DateTime object');\n}",
    "receiverBase": "",
    "receiverCallee": "test"
  },
  {
    "callback": "function () {\n    sprocket.set('createdAt', null);\n    equals(sprocket.readAttribute('createdAt'), null);\n    equals(nullSprocket.get('createdAt'), null);\n}",
    "receiverBase": "",
    "receiverCallee": "test"
  },
  {
    "callback": "function (req, res) {\n    res.writeHead(200);\n    res.end('hello world\\n' + i++);\n}",
    "receiverBase": "http",
    "receiverCallee": "createServer"
  },
  {
    "callback": "function (e) {\n    if (e.which === 39 || e.which === 9) {\n        this.autocomplete();\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "proxy"
  },
  {
    "callback": "function (domain) {\n    return 0 === domain.indexOf(str);\n}",
    "receiverBase": "_domains",
    "receiverCallee": "filter"
  },
  {
    "callback": "function () {\n    if (!$.data(this, 'yz_' + pluginName)) {\n        $.data(this, 'yz_' + pluginName, new Plugin(this, options));\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (global, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = global.document ? factory(global, true) : function (w) {\n            if (!w.document) {\n                throw new Error('jQuery requires a window with a document');\n            }\n            return factory(w);\n        };\n    } else {\n        factory(global);\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (elem, i) {\n    return callback.call(elem, i, elem);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function (i, name) {\n    class2type['[object ' + name + ']'] = name.toLowerCase();\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (argument) {\n    argument = +argument;\n    return markFunction(function (seed, matches) {\n        var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n        while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n                seed[j] = !(matches[j] = seed[j]);\n            }\n        }\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (seed, matches) {\n    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n    while (i--) {\n        if (seed[j = matchIndexes[i]]) {\n            seed[j] = !(matches[j] = seed[j]);\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function () {\n    setDocument();\n}",
    "receiverBase": "parent",
    "receiverCallee": "addEventListener"
  },
  {
    "callback": "function () {\n    setDocument();\n}",
    "receiverBase": "parent",
    "receiverCallee": "attachEvent"
  },
  {
    "callback": "function (div) {\n    div.className = 'i';\n    return !div.getAttribute('className');\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.appendChild(doc.createComment(''));\n    return !div.getElementsByTagName('*').length;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<div class=\\'a\\'></div><div class=\\'a i\\'></div>';\n    div.firstChild.className = 'i';\n    return div.getElementsByClassName('i').length === 2;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    docElem.appendChild(div).id = expando;\n    return !doc.getElementsByName || !doc.getElementsByName(expando).length;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<select msallowclip=\\'\\'><option selected=\\'\\'></option></select>';\n    if (div.querySelectorAll('[msallowclip^=\\'\\']').length) {\n        rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\\'\\'|\"\")');\n    }\n    if (!div.querySelectorAll('[selected]').length) {\n        rbuggyQSA.push('\\\\[' + whitespace + '*(?:value|' + booleans + ')');\n    }\n    if (!div.querySelectorAll(':checked').length) {\n        rbuggyQSA.push(':checked');\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    var input = doc.createElement('input');\n    input.setAttribute('type', 'hidden');\n    div.appendChild(input).setAttribute('name', 'D');\n    if (div.querySelectorAll('[name=d]').length) {\n        rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');\n    }\n    if (!div.querySelectorAll(':enabled').length) {\n        rbuggyQSA.push(':enabled', ':disabled');\n    }\n    div.querySelectorAll('*,:x');\n    rbuggyQSA.push(',.*:');\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    support.disconnectedMatch = matches.call(div, 'div');\n    matches.call(div, '[s!=\\'\\']:x');\n    rbuggyMatches.push('!=', pseudos);\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (elem) {\n    return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute('class') || '');\n}",
    "receiverBase": "",
    "receiverCallee": "classCache"
  },
  {
    "callback": "function (seed, matches) {\n    var idx, matched = fn(seed, argument), i = matched.length;\n    while (i--) {\n        idx = indexOf.call(seed, matched[i]);\n        seed[idx] = !(matches[idx] = matched[i]);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (seed, matches, context, xml) {\n    var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;\n    while (i--) {\n        if (elem = unmatched[i]) {\n            seed[i] = !(matches[i] = elem);\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (selector) {\n    return function (elem) {\n        return Sizzle(selector, elem).length > 0;\n    };\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (text) {\n    return function (elem) {\n        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n    };\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function () {\n    return [0];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    return [length - 1];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    return [argument < 0 ? argument + length : argument];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    var i = 0;\n    for (; i < length; i += 2) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    var i = 1;\n    for (; i < length; i += 2) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    var i = argument < 0 ? argument + length : argument;\n    for (; --i >= 0;) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    var i = argument < 0 ? argument + length : argument;\n    for (; ++i < length;) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (elem) {\n    return elem === checkContext;\n}",
    "receiverBase": "",
    "receiverCallee": "addCombinator"
  },
  {
    "callback": "function (elem) {\n    return indexOf.call(checkContext, elem) > -1;\n}",
    "receiverBase": "",
    "receiverCallee": "addCombinator"
  },
  {
    "callback": "function (div1) {\n    return div1.compareDocumentPosition(document.createElement('div')) & 1;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<a href=\\'#\\'></a>';\n    return div.firstChild.getAttribute('href') === '#';\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (elem, name, isXML) {\n    if (!isXML) {\n        return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addHandle"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<input/>';\n    div.firstChild.setAttribute('value', '');\n    return div.firstChild.getAttribute('value') === '';\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (elem, name, isXML) {\n    if (!isXML && elem.nodeName.toLowerCase() === 'input') {\n        return elem.defaultValue;\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addHandle"
  },
  {
    "callback": "function (div) {\n    return div.getAttribute('disabled') == null;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (elem, name, isXML) {\n    var val;\n    if (!isXML) {\n        return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addHandle"
  },
  {
    "callback": "function (elem, i) {\n    return !!qualifier.call(elem, i, elem) !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return elem === qualifier !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return jQuery.inArray(elem, qualifier) >= 0 !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return elem.nodeType === 1;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function () {\n    for (i = 0; i < len; i++) {\n        if (jQuery.contains(self[i], this)) {\n            return true;\n        }\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "filter"
  },
  {
    "callback": "function () {\n    for (i = 0; i < len; i++) {\n        if (jQuery.contains(this, targets[i])) {\n            return true;\n        }\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (_, flag) {\n    object[flag] = true;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function add(args) {\n    jQuery.each(args, function (_, arg) {\n        var type = jQuery.type(arg);\n        if (type === 'function') {\n            if (!options.unique || !self.has(arg)) {\n                list.push(arg);\n            }\n        } else if (arg && arg.length && type !== 'string') {\n            add(arg);\n        }\n    });\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (_, arg) {\n    var type = jQuery.type(arg);\n    if (type === 'function') {\n        if (!options.unique || !self.has(arg)) {\n            list.push(arg);\n        }\n    } else if (arg && arg.length && type !== 'string') {\n        add(arg);\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (_, arg) {\n    var index;\n    while ((index = jQuery.inArray(arg, list, index)) > -1) {\n        list.splice(index, 1);\n        if (firing) {\n            if (index <= firingLength) {\n                firingLength--;\n            }\n            if (index <= firingIndex) {\n                firingIndex--;\n            }\n        }\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, tuple) {\n    var fn = jQuery.isFunction(fns[i]) && fns[i];\n    deferred[tuple[1]](function () {\n        var returned = fn && fn.apply(this, arguments);\n        if (returned && jQuery.isFunction(returned.promise)) {\n            returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n        } else {\n            newDefer[tuple[0] + 'With'](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n        }\n    });\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var returned = fn && fn.apply(this, arguments);\n    if (returned && jQuery.isFunction(returned.promise)) {\n        returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n    } else {\n        newDefer[tuple[0] + 'With'](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "deferred"
  },
  {
    "callback": "function (i, tuple) {\n    var list = tuple[2], stateString = tuple[3];\n    promise[tuple[1]] = list.add;\n    if (stateString) {\n        list.add(function () {\n            state = stateString;\n        }, tuples[i ^ 1][2].disable, tuples[2][2].lock);\n    }\n    deferred[tuple[0]] = function () {\n        deferred[tuple[0] + 'With'](this === deferred ? promise : this, arguments);\n        return this;\n    };\n    deferred[tuple[0] + 'With'] = list.fireWith;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    state = stateString;\n}",
    "receiverBase": "list",
    "receiverCallee": "add"
  },
  {
    "callback": "function doScrollCheck() {\n    if (!jQuery.isReady) {\n        try {\n            top.doScroll('left');\n        } catch (e) {\n            return setTimeout(doScrollCheck, 50);\n        }\n        detach();\n        jQuery.ready();\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    var div = document.createElement('div');\n    if (support.deleteExpando == null) {\n        support.deleteExpando = true;\n        try {\n            delete div.test;\n        } catch (e) {\n            support.deleteExpando = false;\n        }\n    }\n    div = null;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    jQuery.data(this, key);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.data(this, key, value);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.removeData(this, key);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery._removeData(elem, type + 'queue');\n    jQuery._removeData(elem, key);\n}",
    "receiverBase": "Callbacks",
    "receiverCallee": "add"
  },
  {
    "callback": "function () {\n    var queue = jQuery.queue(this, type, data);\n    jQuery._queueHooks(this, type);\n    if (type === 'fx' && queue[0] !== 'inprogress') {\n        jQuery.dequeue(this, type);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.dequeue(this, type);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    support.noCloneEvent = false;\n}",
    "receiverBase": "div",
    "receiverCallee": "attachEvent"
  },
  {
    "callback": "function () {\n    var i, eventName, div = document.createElement('div');\n    for (i in {\n            submit: true,\n            change: true,\n            focusin: true\n        }) {\n        eventName = 'on' + i;\n        if (!(support[i + 'Bubbles'] = eventName in window)) {\n            div.setAttribute(eventName, 't');\n            support[i + 'Bubbles'] = div.attributes[eventName].expando === false;\n        }\n    }\n    div = null;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (e) {\n    var elem = e.target, form = jQuery.nodeName(elem, 'input') || jQuery.nodeName(elem, 'button') ? elem.form : undefined;\n    if (form && !jQuery._data(form, 'submitBubbles')) {\n        jQuery.event.add(form, 'submit._submit', function (event) {\n            event._submit_bubble = true;\n        });\n        jQuery._data(form, 'submitBubbles', true);\n    }\n}",
    "receiverBase": "event",
    "receiverCallee": "add"
  },
  {
    "callback": "function (event) {\n    event._submit_bubble = true;\n}",
    "receiverBase": "event",
    "receiverCallee": "add"
  },
  {
    "callback": "function (event) {\n    if (event.originalEvent.propertyName === 'checked') {\n        this._just_changed = true;\n    }\n}",
    "receiverBase": "event",
    "receiverCallee": "add"
  },
  {
    "callback": "function (event) {\n    if (this._just_changed && !event.isTrigger) {\n        this._just_changed = false;\n    }\n    jQuery.event.simulate('change', this, event, true);\n}",
    "receiverBase": "event",
    "receiverCallee": "add"
  },
  {
    "callback": "function (e) {\n    var elem = e.target;\n    if (rformElems.test(elem.nodeName) && !jQuery._data(elem, 'changeBubbles')) {\n        jQuery.event.add(elem, 'change._change', function (event) {\n            if (this.parentNode && !event.isSimulated && !event.isTrigger) {\n                jQuery.event.simulate('change', this.parentNode, event, true);\n            }\n        });\n        jQuery._data(elem, 'changeBubbles', true);\n    }\n}",
    "receiverBase": "event",
    "receiverCallee": "add"
  },
  {
    "callback": "function (event) {\n    if (this.parentNode && !event.isSimulated && !event.isTrigger) {\n        jQuery.event.simulate('change', this.parentNode, event, true);\n    }\n}",
    "receiverBase": "event",
    "receiverCallee": "add"
  },
  {
    "callback": "function () {\n    jQuery.event.add(this, types, fn, data, selector);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.event.remove(this, types, fn, selector);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.event.trigger(type, data, this);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (value) {\n    return value === undefined ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));\n}",
    "receiverBase": "",
    "receiverCallee": "access"
  },
  {
    "callback": "function (elem) {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        var target = manipulationTarget(this, elem);\n        target.appendChild(elem);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        var target = manipulationTarget(this, elem);\n        target.insertBefore(elem, target.firstChild);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.parentNode) {\n        this.parentNode.insertBefore(elem, this);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.parentNode) {\n        this.parentNode.insertBefore(elem, this.nextSibling);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function () {\n    return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function (elem) {\n    arg = this.parentNode;\n    jQuery.cleanData(getAll(this));\n    if (arg) {\n        arg.replaceChild(elem, this);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (index) {\n    var self = set.eq(index);\n    if (isFunction) {\n        args[0] = value.call(this, index, self.html());\n    }\n    self.domManip(args, callback);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (name, original) {\n    jQuery.fn[name] = function (selector) {\n        var elems, i = 0, ret = [], insert = jQuery(selector), last = insert.length - 1;\n        for (; i <= last; i++) {\n            elems = i === last ? this : this.clone(true);\n            jQuery(insert[i])[original](elems);\n            push.apply(ret, elems.get());\n        }\n        return this.pushStack(ret);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    return getWidthOrHeight(elem, name, extra);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "swap"
  },
  {
    "callback": "function (elem, computed) {\n    if (computed) {\n        return jQuery.swap(elem, { 'display': 'inline-block' }, curCSS, [\n            elem,\n            'marginRight'\n        ]);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "addGetHookIf"
  },
  {
    "callback": "function (elem, name, value) {\n    var styles, len, map = {}, i = 0;\n    if (jQuery.isArray(name)) {\n        styles = getStyles(elem);\n        len = name.length;\n        for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n        }\n        return map;\n    }\n    return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n}",
    "receiverBase": "",
    "receiverCallee": "access"
  },
  {
    "callback": "function () {\n    if (isHidden(this)) {\n        jQuery(this).show();\n    } else {\n        jQuery(this).hide();\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    fxNow = undefined;\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    anim.always(function () {\n        hooks.unqueued--;\n        if (!jQuery.queue(elem, 'fx').length) {\n            hooks.empty.fire();\n        }\n    });\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    hooks.unqueued--;\n    if (!jQuery.queue(elem, 'fx').length) {\n        hooks.empty.fire();\n    }\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    style.overflow = opts.overflow[0];\n    style.overflowX = opts.overflow[1];\n    style.overflowY = opts.overflow[2];\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    jQuery(elem).hide();\n}",
    "receiverBase": "anim",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    var prop;\n    jQuery._removeData(elem, 'fxshow');\n    for (prop in orig) {\n        jQuery.style(elem, prop, orig[prop]);\n    }\n}",
    "receiverBase": "anim",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    delete tick.elem;\n}",
    "receiverBase": "Deferred",
    "receiverCallee": "always"
  },
  {
    "callback": "function (i, name) {\n    var cssFn = jQuery.fn[name];\n    jQuery.fn[name] = function (speed, easing, callback) {\n        return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n        return this.animate(props, speed, easing, callback);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (next, hooks) {\n    var timeout = setTimeout(next, time);\n    hooks.stop = function () {\n        clearTimeout(timeout);\n    };\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "queue"
  },
  {
    "callback": "function (value) {\n    return value == null ? '' : value + '';\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    jQuery.valHooks[this] = {\n        set: function (elem, value) {\n            if (jQuery.isArray(value)) {\n                return elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0;\n            }\n        }\n    };\n    if (!support.checkOn) {\n        jQuery.valHooks[this].get = function (elem) {\n            return elem.getAttribute('value') === null ? 'on' : elem.value;\n        };\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.removeAttr(this, name);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, name) {\n    jQuery.attrHooks[name] = {\n        set: function (elem, value) {\n            if (value === '') {\n                elem.setAttribute(name, 'auto');\n                return value;\n            }\n        }\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    try {\n        this[name] = undefined;\n        delete this[name];\n    } catch (e) {\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, name) {\n    jQuery.propHooks[name] = {\n        get: function (elem) {\n            return elem.getAttribute(name, 4);\n        }\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (j) {\n    jQuery(this).addClass(value.call(this, j, this.className));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (j) {\n    jQuery(this).removeClass(value.call(this, j, this.className));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, name) {\n    jQuery.fn[name] = function (data, fn) {\n        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapAll(html.call(this, i));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var elem = this;\n    while (elem.firstChild && elem.firstChild.nodeType === 1) {\n        elem = elem.firstChild;\n    }\n    return elem;\n}",
    "receiverBase": "wrap",
    "receiverCallee": "map"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapInner(html.call(this, i));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var self = jQuery(this), contents = self.contents();\n    if (contents.length) {\n        contents.wrapAll(html);\n    } else {\n        self.append(html);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    if (!jQuery.nodeName(this, 'body')) {\n        jQuery(this).replaceWith(this.childNodes);\n    }\n}",
    "receiverBase": "parent",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, v) {\n    if (traditional || rbracket.test(prefix)) {\n        add(prefix, v);\n    } else {\n        buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add);\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    add(this.name, this.value);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var elements = jQuery.prop(this, 'elements');\n    return elements ? jQuery.makeArray(elements) : this;\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    var type = this.type;\n    return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n}",
    "receiverBase": "map",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (i, elem) {\n    var val = jQuery(this).val();\n    return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {\n        return {\n            name: elem.name,\n            value: val.replace(rCRLF, '\\r\\n')\n        };\n    }) : {\n        name: elem.name,\n        value: val.replace(rCRLF, '\\r\\n')\n    };\n}",
    "receiverBase": "filter",
    "receiverCallee": "map"
  },
  {
    "callback": "function (val) {\n    return {\n        name: elem.name,\n        value: val.replace(rCRLF, '\\r\\n')\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function (fn) {\n    return elem === fn.elem;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function () {\n    return jQuery;\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function () {\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "resetConsumer"
  },
  {
    "callback": "function (node) {\n    new CKEDITOR.dom.element(node, scayt_control.document).mergeSiblings();\n}",
    "receiverBase": "afterMarkupRemove",
    "receiverCallee": "push"
  },
  {
    "callback": "function () {\n    var scripts = CKEDITOR.document.getElementsByTag('script'), scaytIdRegex = /^dojoIoScript(\\d+)$/i, scaytSrcRegex = /^https?:\\/\\/svc\\.webspellchecker\\.net\\/spellcheck\\/script\\/ssrv\\.cgi/i;\n    for (var i = 0; i < scripts.count(); i++) {\n        var script = scripts.getItem(i), id = script.getId(), src = script.getAttribute('src');\n        if (id && src && id.match(scaytIdRegex) && src.match(scaytSrcRegex))\n            script.remove();\n    }\n}",
    "receiverBase": "editor",
    "receiverCallee": "on"
  },
  {
    "callback": "function (ev) {\n    if (ev.data.name == 'source' && editor.mode == 'source')\n        plugin.markControlRestore(editor);\n}",
    "receiverBase": "editor",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    plugin.getScayt(editor).setDisabled(false);\n    plugin.getScayt(editor).focus();\n    plugin.getScayt(editor).refresh();\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    var scayt_instance = plugin.getScayt(editor);\n    if (plugin.isScaytEnabled(editor)) {\n        if (CKEDITOR.env.ie)\n            editor.getSelection().unlock(true);\n        window.setTimeout(function () {\n            scayt_instance.focus();\n            scayt_instance.refresh();\n        }, 10);\n    }\n}",
    "receiverBase": "editor",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    scayt_instance.focus();\n    scayt_instance.refresh();\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    var scayt_instance = plugin.getScayt(editor);\n    if (plugin.isScaytEnabled(editor)) {\n        if (CKEDITOR.env.ie)\n            editor.getSelection().unlock(true);\n        window.setTimeout(function () {\n            scayt_instance.focus();\n            scayt_instance.refresh();\n        }, 10);\n    }\n}",
    "receiverBase": "editor",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    scayt_instance.focus();\n    scayt_instance.refresh();\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (ev) {\n    ev.data.djConfig = window.djConfig;\n    ev.data.scayt_control = plugin.getScayt(editor);\n    ev.data.tab = openPage;\n    ev.data.scayt = window.scayt;\n}",
    "receiverBase": "editor",
    "receiverCallee": "on"
  },
  {
    "callback": "function (org) {\n    return function () {\n        var retval = null, scayt_instance = plugin.getScayt(this);\n        if (scayt_instance && plugin.isScaytReady(this)) {\n            var currentData = scayt_instance.reset(this.getSnapshot());\n            var prevData = scayt_instance.reset(this._.previousValue);\n            retval = currentData !== prevData;\n        } else {\n            retval = org.apply(this);\n        }\n        return retval;\n    };\n}",
    "receiverBase": "tools",
    "receiverCallee": "override"
  },
  {
    "callback": "function () {\n    onEngineLoad.apply(editor);\n}",
    "receiverBase": "CKEDITOR",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    this.engineLoaded = true;\n}",
    "receiverBase": "CKEDITOR",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    this.setState(command.state);\n}",
    "receiverBase": "command",
    "receiverCallee": "on"
  },
  {
    "callback": "function (el, s) {\n    return {\n        exec: function () {\n            scayt_control.replace(el, s);\n        }\n    };\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    plugin.loadEngine(editor);\n}",
    "receiverBase": "editor",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    var polygon;\n    polygon = new Polygon({ ctx: svg });\n    return expect(polygon instanceof Bit).toBe(true);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var tri;\n    tri = new Polygon({ ctx: svg });\n    return expect(tri.props.points).toBe(3);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var tri;\n    tri = new Polygon({\n        ctx: svg,\n        points: 8\n    });\n    return expect(tri.props.points).toBe(8);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var tri;\n    tri = new Polygon({\n        ctx: svg,\n        points: 8\n    });\n    spyOn(tri, 'drawShape');\n    tri.isDraw = false;\n    tri.draw();\n    return expect(tri.drawShape).toHaveBeenCalled();\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var tri;\n    tri = new Polygon({ ctx: svg });\n    expect(tri.radialPoints).toBeDefined();\n    return expect(tri.radialPoints.length).toBe(tri.props.points);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var tri;\n    tri = new Polygon({ ctx: svg });\n    expect(tri.radialPoints).toBeDefined();\n    return expect(tri.radialPoints.length).toBe(tri.props.points);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var d, d2, isD, isIE9D, tri;\n    svg = typeof document.createElementNS === 'function' ? document.createElementNS(ns, 'svg') : void 0;\n    tri = new Polygon({\n        ctx: svg,\n        radius: 20\n    });\n    d = tri.el.getAttribute('d');\n    d2 = 'M0.0000,-20.0000 L17.3205,10.0000 L-17.3205,10.0000 z';\n    isD = d === d2;\n    isIE9D = d === 'M 0 -20 L 17.3205 10 L -17.3205 10 Z';\n    return expect(isD || isIE9D).toBe(true);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var d, d2, isD, isIE9D, tri;\n    svg = typeof document.createElementNS === 'function' ? document.createElementNS(ns, 'svg') : void 0;\n    tri = new Polygon({\n        ctx: svg,\n        radius: 20,\n        radiusX: 40\n    });\n    d = tri.el.getAttribute('d');\n    d2 = 'M0.0000,-20.0000 L34.6410,10.0000 L-34.6410,10.0000 z';\n    isD = d === d2;\n    isIE9D = d === 'M 0 -20 L 34.641 10 L -34.641 10 Z';\n    return expect(isD || isIE9D).toBe(true);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var d, d2, isD, isIE9D, tri;\n    svg = typeof document.createElementNS === 'function' ? document.createElementNS(ns, 'svg') : void 0;\n    tri = new Polygon({\n        ctx: svg,\n        radius: 20,\n        radiusY: 40\n    });\n    d = tri.el.getAttribute('d');\n    d2 = 'M0.0000,-40.0000 L17.3205,20.0000 L-17.3205,20.0000 z';\n    isD = d === d2;\n    isIE9D = d === 'M 0 -40 L 17.3205 20 L -17.3205 20 Z';\n    return expect(isD || isIE9D).toBe(true);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var polygon;\n    svg = typeof document.createElementNS === 'function' ? document.createElementNS(ns, 'svg') : void 0;\n    polygon = new Polygon({ ctx: svg });\n    spyOn(Polygon.__super__, 'draw');\n    polygon.draw();\n    return expect(Polygon.__super__.draw).toHaveBeenCalled();\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var bit, radius;\n    radius = 100;\n    bit = new Polygon({\n        ctx: document.createElementNS(ns, 'svg'),\n        radius: radius\n    });\n    return expect(bit.getLength().toFixed(1)).toBe('519.6');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var bit, radiusX, radiusY;\n    radiusX = 100;\n    radiusY = 50;\n    bit = new Polygon({\n        ctx: document.createElementNS(ns, 'svg'),\n        radiusX: radiusX,\n        radiusY: radiusY\n    });\n    return expect(bit.getLength().toFixed(2)).toBe('402.33');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define([\n            'jquery',\n            'tmpl',\n            'load-image',\n            './jquery.fileupload-fp'\n        ], factory);\n    } else {\n        factory(window.jQuery, window.tmpl, window.loadImage);\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    if (that._trigger('added', e, data) !== false && (options.autoUpload || data.autoUpload) && data.autoUpload !== false && data.isValidated) {\n        data.submit();\n    }\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    var node = $(this);\n    template = that._renderDownload([file]).replaceAll(node);\n    that._forceReflow(template);\n    that._transition(template).done(function () {\n        data.context = $(this);\n        that._trigger('completed', e, data);\n        that._trigger('finished', e, data);\n        deferred.resolve();\n    });\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    data.context = $(this);\n    that._trigger('completed', e, data);\n    that._trigger('finished', e, data);\n    deferred.resolve();\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function (index, file) {\n    if (data.maxNumberOfFilesAdjusted && file.error) {\n        that._adjustMaxNumberOfFiles(1);\n    } else if (!data.maxNumberOfFilesAdjusted && !file.error) {\n        that._adjustMaxNumberOfFiles(-1);\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    data.context = $(this);\n    that._trigger('completed', e, data);\n    that._trigger('finished', e, data);\n    deferred.resolve();\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    var node = $(this);\n    template = that._renderDownload([file]).replaceAll(node);\n    that._forceReflow(template);\n    that._transition(template).done(function () {\n        data.context = $(this);\n        that._trigger('failed', e, data);\n        that._trigger('finished', e, data);\n        deferred.resolve();\n    });\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    data.context = $(this);\n    that._trigger('failed', e, data);\n    that._trigger('finished', e, data);\n    deferred.resolve();\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    $(this).remove();\n    that._trigger('failed', e, data);\n    that._trigger('finished', e, data);\n    deferred.resolve();\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    data.context = $(this);\n    that._trigger('failed', e, data);\n    that._trigger('finished', e, data);\n    deferred.resolve();\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    that._trigger('started', e);\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    that._trigger('stopped', e);\n}",
    "receiverBase": "apply",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    $(this).find('.progress').attr('aria-valuenow', '0').find('.bar').css('width', '0%');\n    $(this).find('.progress-extended').html('&nbsp;');\n    deferred.resolve();\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    $(this).remove();\n    that._trigger('destroyed', e, data);\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function (e) {\n    try {\n        e.originalEvent.dataTransfer.setData('DownloadURL', [\n            type,\n            name,\n            url\n        ].join(':'));\n    } catch (err) {\n    }\n}",
    "receiverBase": "link",
    "receiverCallee": "bind"
  },
  {
    "callback": "function (index, file) {\n    file.error = that._hasError(file);\n    if (file.error) {\n        valid = false;\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function (img) {\n    node.append(img);\n    that._forceReflow(node);\n    that._transition(node).done(function () {\n        dfd.resolveWith(node);\n    });\n    if (!$.contains(that.document[0].body, node[0])) {\n        dfd.resolveWith(node);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "loadImage"
  },
  {
    "callback": "function () {\n    dfd.resolveWith(node);\n}",
    "receiverBase": "_transition",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    var dfd = $.Deferred();\n    that._renderPreview(file, $(element)).done(function () {\n        dfd.resolveWith(that);\n    });\n    return dfd.promise();\n}",
    "receiverBase": "_processingQueue",
    "receiverCallee": "pipe"
  },
  {
    "callback": "function () {\n    dfd.resolveWith(that);\n}",
    "receiverBase": "_renderPreview",
    "receiverCallee": "done"
  },
  {
    "callback": "function (e) {\n    if (e.target === node[0]) {\n        node.unbind($.support.transition.end);\n        dfd.resolveWith(node);\n    }\n}",
    "receiverBase": "node",
    "receiverCallee": "bind"
  },
  {
    "callback": "function (_map, _index) {\n    if (_map.id === _name && !isset) {\n        isset = true;\n        $.setMapImage(_index);\n    }\n}",
    "receiverBase": "maps",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (data) {\n    var cssAsset = new AssetGraph.Css({ text: data });\n    if (asset.url) {\n        cssAsset.url = asset.url.replace(/\\.styl$|$/, cssAsset.defaultExtension);\n    }\n    asset.replaceWith(cssAsset);\n    cb();\n}",
    "receiverBase": "render",
    "receiverCallee": "done"
  },
  {
    "callback": "function (err) {\n    cb(err);\n}",
    "receiverBase": "render",
    "receiverCallee": "done"
  },
  {
    "callback": "function (BigInt, CryptoJS, EventEmitter) {\n    var root = {\n            BigInt: BigInt,\n            CryptoJS: CryptoJS,\n            EventEmitter: EventEmitter,\n            OTR: {},\n            DSA: {}\n        };\n    return factory.call(root);\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (prv, cur) {\n    return prv + HLP.packMPI(cur);\n}",
    "receiverBase": "arr",
    "receiverCallee": "reduce"
  },
  {
    "callback": "function (m) {\n    return HLP.readMPI(m);\n}",
    "receiverBase": "splitype",
    "receiverCallee": "map"
  },
  {
    "callback": "function (a) {\n    var str;\n    switch (a) {\n    case 'PUBKEY':\n        str = splitype([\n            'SHORT',\n            'MPI',\n            'MPI',\n            'MPI',\n            'MPI'\n        ], msg).join('');\n        break;\n    case 'DATA':\n    case 'MPI':\n        str = msg.substring(0, HLP.readLen(msg) + 4);\n        break;\n    default:\n        str = msg.substring(0, DTS[a]);\n    }\n    data.push(str);\n    msg = msg.substring(str.length);\n}",
    "receiverBase": "arr",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function () {\n    var i = 0, _bin2num = {};\n    for (; i < 256; ++i) {\n        _bin2num[String.fromCharCode(i)] = i;\n    }\n    for (i = 128; i < 256; ++i) {\n        _bin2num[String.fromCharCode(63232 + i)] = i;\n    }\n    return _bin2num;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (k) {\n    DSA[k] = root.DSA[k];\n}",
    "receiverBase": "keys",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (prop) {\n    self[prop] = obj[prop];\n}",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (i) {\n    o.push(parseLibotr(i));\n}",
    "receiverBase": "val",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (i) {\n    val = i.val[0];\n    if (typeof val === 'string') {\n        if (val.indexOf('#') === 0) {\n            val = val.substring(1, val.lastIndexOf('#'));\n            val = BigInt.str2bigInt(val, 16);\n        }\n    } else {\n        val = parseLibotr(i);\n    }\n    o[i.type] = val;\n}",
    "receiverBase": "val",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (k) {\n    opts[k] = options[k];\n}",
    "receiverBase": "keys",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (q) {\n    if (Object.hasOwnProperty.call(vers, q))\n        ver.push(vers[q]);\n}",
    "receiverBase": "qs",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (meth) {\n    self[meth] = self[meth].bind(self);\n}",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (k) {\n    OTR[k] = root.OTR[k];\n}",
    "receiverBase": "keys",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (meth) {\n    self[meth] = self[meth].bind(self);\n}",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (k) {\n    opts[k] = otr.smw[k];\n}",
    "receiverBase": "keys",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (m) {\n    OTR.prototype._SMW.prototype[m] = function () {\n        this.worker.postMessage({\n            type: 'method',\n            method: m,\n            args: Array.prototype.slice.call(arguments, 0)\n        });\n    };\n}",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (e) {\n    self.sm.on(e, function () {\n        self.trigger('smp', [e].concat(Array.prototype.slice.call(arguments)));\n    });\n}",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function () {\n    self.trigger('smp', [e].concat(Array.prototype.slice.call(arguments)));\n}",
    "receiverBase": "sm",
    "receiverCallee": "on"
  },
  {
    "callback": "function (ssid, send) {\n    if (self.ssid === ssid)\n        self._sendMsg(send);\n}",
    "receiverBase": "sm",
    "receiverCallee": "on"
  },
  {
    "callback": "function send(first) {\n    if (!first) {\n        if (!self.outgoing.length)\n            return;\n        var msg = self.outgoing.shift();\n        self.trigger('io', [msg]);\n    }\n    setTimeout(send, first ? 0 : self.send_interval);\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (sk) {\n    if (sk && sk.sendmacused)\n        self.oldMacKeys.push(sk.sendmac);\n    if (sk && sk.rcvmacused)\n        self.oldMacKeys.push(sk.rcvmac);\n}",
    "receiverBase": "sessKeys",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (sk) {\n    if (sk[1] && sk[1].sendmacused)\n        self.oldMacKeys.push(sk[1].sendmac);\n    if (sk[1] && sk[1].rcvmacused)\n        self.oldMacKeys.push(sk[1].rcvmac);\n}",
    "receiverBase": "sessKeys",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (v) {\n    if (v !== '1')\n        msg += v;\n}",
    "receiverBase": "vs",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function (msg) {\n    self._sendMsg(msg);\n}",
    "receiverBase": "splice",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function () {\n    return core.insert;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return core.remove;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return commands.rename;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return core.save;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return core.update;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return commands.distinct;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return commands.count;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return core.findAndModify;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return core.findAndRemove;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return query.find;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return query.findOne;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return index.createIndex;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return index.ensureIndex;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return index.indexInformation;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return index.dropAllIndexes;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return Collection.prototype.dropAllIndexes;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return aggregation.mapReduce;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return aggregation.group;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return commands.options;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return commands.isCapped;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return index.indexExists;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return geo.geoNear;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return geo.geoHaystackSearch;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return aggregation.aggregate;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return commands.stats;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return unordered.initializeUnorderedBulkOp;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return ordered.initializeOrderedBulkOp;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return query.parallelCollectionScan;\n}",
    "receiverBase": ""
  }
]