[
  {
    "callback": "function (a, b) {\n    return b.expiration - a.expiration;\n}",
    "receiverBase": "storedKeys",
    "receiverCallee": "sort"
  },
  {
    "callback": "function (subscription) {\n    subscription.callback.apply(subscription.context || this, args);\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (event, index) {\n    if (!_.isUndefined(position)) {\n        return;\n    }\n    if (event.priority <= subscription.priority) {\n        position = index;\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    self.unsubscribe(name, { token: options.token });\n    callback.apply(this, arguments);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function (b) {\n    return b.callback === identifier;\n}",
    "receiverBase": "_",
    "receiverCallee": "reject"
  },
  {
    "callback": "function (b) {\n    return b.token === identifier;\n}",
    "receiverBase": "_",
    "receiverCallee": "reject"
  },
  {
    "callback": "function () {\n    it('should exist', function () {\n        browser.get('/admin/scheduling');\n        browser.getLocationAbsUrl().then(function (url) {\n            expect(url).toBe('http://localhost:8000/admin/scheduling');\n        });\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function () {\n    browser.get('/admin/scheduling');\n    browser.getLocationAbsUrl().then(function (url) {\n        expect(url).toBe('http://localhost:8000/admin/scheduling');\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (url) {\n    expect(url).toBe('http://localhost:8000/admin/scheduling');\n}",
    "receiverBase": "getLocationAbsUrl",
    "receiverCallee": "then"
  },
  {
    "callback": "function (options) {\n    return new Keyring(identifier, options);\n}",
    "receiverBase": "postMessage",
    "receiverCallee": "then"
  },
  {
    "callback": "function (options) {\n    return new Keyring(identifier, options);\n}",
    "receiverBase": "postMessage",
    "receiverCallee": "then"
  },
  {
    "callback": "function (editorId) {\n    return new Editor(editorId);\n}",
    "receiverBase": "postMessage",
    "receiverCallee": "then"
  },
  {
    "callback": "function () {\n    that.logoRev = revision;\n}",
    "receiverBase": "postMessage",
    "receiverCallee": "then"
  },
  {
    "callback": "function () {\n    window.dispatchEvent(new CustomEvent('mailvelope', { detail: window.mailvelope }));\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (e) {\n    e.Intl.add('datatable-sort', '', {\n        asc: 'Ascending',\n        desc: 'Descending',\n        sortBy: 'Sort by {column}',\n        reverseSortBy: 'Reverse sort by {column}'\n    });\n}",
    "receiverBase": "YUI",
    "receiverCallee": "add"
  },
  {
    "callback": "function (n) {\n    var l = n.layer;\n    if (!n.hidden && n.attributes.checkedGroup === group) {\n        checkedCount++;\n        if (l != layer && attributes.checked) {\n            l.setVisibility(false);\n        }\n    }\n}",
    "receiverBase": "Ext",
    "receiverCallee": "each"
  },
  {
    "callback": "function (r) {\n    r.name = r.name + '_clone';\n}",
    "receiverBase": "Ext",
    "receiverCallee": "each"
  },
  {
    "callback": "function (o) {\n    return o.get('title') == this.layer;\n}",
    "receiverBase": "layerStore",
    "receiverCallee": "findBy"
  },
  {
    "callback": "function () {\n    for (i = 0; i < len; i++) {\n        if (jQuery.contains(self[i], this)) {\n            return true;\n        }\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "filter"
  },
  {
    "callback": "function () {\n    var i = 0;\n    for (; i < l; i++) {\n        if (jQuery.contains(this, targets[i])) {\n            return true;\n        }\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (elem) {\n    return elem.nodeType === 1;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem, i) {\n    return !!qualifier.call(elem, i, elem) !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return elem === qualifier !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return core_indexOf.call(qualifier, elem) >= 0 !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (value) {\n    return value === undefined ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "access"
  },
  {
    "callback": "function (elem) {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        var target = manipulationTarget(this, elem);\n        target.appendChild(elem);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        var target = manipulationTarget(this, elem);\n        target.insertBefore(elem, target.firstChild);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.parentNode) {\n        this.parentNode.insertBefore(elem, this);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.parentNode) {\n        this.parentNode.insertBefore(elem, this.nextSibling);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function () {\n    return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function (elem) {\n    return [\n        elem.nextSibling,\n        elem.parentNode\n    ];\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function (elem) {\n    var next = args[i++], parent = args[i++];\n    if (parent) {\n        if (next && next.parentNode !== parent) {\n            next = this.nextSibling;\n        }\n        jQuery(this).remove();\n        parent.insertBefore(elem, next);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (index) {\n    var self = set.eq(index);\n    if (isFunction) {\n        args[0] = value.call(this, index, self.html());\n    }\n    self.domManip(args, callback, allowIntersection);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (name, original) {\n    jQuery.fn[name] = function (selector) {\n        var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;\n        for (; i <= last; i++) {\n            elems = i === last ? this : this.clone(true);\n            jQuery(insert[i])[original](elems);\n            core_push.apply(ret, elems.get());\n        }\n        return this.pushStack(ret);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapAll(html.call(this, i));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var elem = this;\n    while (elem.firstElementChild) {\n        elem = elem.firstElementChild;\n    }\n    return elem;\n}",
    "receiverBase": "wrap",
    "receiverCallee": "map"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapInner(html.call(this, i));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var self = jQuery(this), contents = self.contents();\n    if (contents.length) {\n        contents.wrapAll(html);\n    } else {\n        self.append(html);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    if (!jQuery.nodeName(this, 'body')) {\n        jQuery(this).replaceWith(this.childNodes);\n    }\n}",
    "receiverBase": "parent",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n}",
    "receiverBase": "_view",
    "receiverCallee": "setSelection"
  },
  {
    "callback": "function (moduleName) {\n    $listener(moduleName);\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    $listener(importee);\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (p) {\n    if (p.nodeType && (p.nodeType == 4 || p.nodeType == 3)) {\n        return true;\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "_filterNodeList"
  },
  {
    "callback": "function (p) {\n    if (p.nodeType && p.nodeType == 1 && p.nodeName && p.nodeName == node.nodeName) {\n        return true;\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "_filterNodeList"
  },
  {
    "callback": "function (eEvent) {\n    var sValue = $(this).closest('.message').find('input.prompt-value').val();\n    fOnConfirm.apply(this, [sValue]);\n}",
    "receiverBase": "",
    "receiverCallee": "GEventHandler"
  },
  {
    "callback": "function (eEvent) {\n    mLink.apply(jA, [eEvent]);\n    return false;\n}",
    "receiverBase": "jA",
    "receiverCallee": "click"
  },
  {
    "callback": "function (MessageToast, Controller) {\n    'use strict';\n    var CController = Controller.extend('sap.m.sample.MessageToast.C', {\n            handleMessageToastPress: function (oEvent) {\n                var msg = 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod.';\n                MessageToast.show(msg);\n            }\n        });\n    return CController;\n}",
    "receiverBase": "ui",
    "receiverCallee": "define"
  }
]