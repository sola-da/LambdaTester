[
  {
    "callback": "function () {\n    self.createFrame();\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (event) {\n    rb.finish();\n    grouper.rubberbandSelect.call(grouper);\n}",
    "receiverBase": "el",
    "receiverCallee": "addEventListener"
  },
  {
    "callback": "function () {\n    this.eventContainerResized.fire(container);\n    this.eventChanged.fire(this);\n}",
    "receiverBase": "ddResize",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    this.eventContainerDragged.fire(container);\n    this.eventChanged.fire(this);\n}",
    "receiverBase": "dd",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    that.draw();\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    that.updatedEvt.fire(that.getValue(), that);\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (e) {\n    var fireSubmitEvent;\n    Event.stopEvent(e);\n    if (this.disabled) {\n        fireSubmitEvent = false;\n    } else {\n        fireSubmitEvent = this.clickEvent.fire();\n    }\n    if (this.options.type === 'link') {\n        fireSubmitEvent = false;\n    }\n    if (fireSubmitEvent) {\n        this.submitEvent.fire();\n    }\n}",
    "receiverBase": "Event",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    that.setValue(choice.value);\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (value, opt) {\n    return opt.value === value;\n}",
    "receiverBase": "inputEx",
    "receiverCallee": "indexOf"
  },
  {
    "callback": "function (label, opt) {\n    return opt.label === label;\n}",
    "receiverBase": "inputEx",
    "receiverCallee": "indexOf"
  },
  {
    "callback": "function (node, choice) {\n    return node === choice.node;\n}",
    "receiverBase": "inputEx",
    "receiverCallee": "indexOf"
  },
  {
    "callback": "function (e) {\n    YAHOO.util.Event.stopEvent(e);\n    var reg = new RegExp(domain, 'i');\n    var fixedVal = val.replace(reg, groupDomain[0]);\n    that.setValue(fixedVal);\n}",
    "receiverBase": "Event",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    this.focus();\n}",
    "receiverBase": "Event",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    that.displayFavicon();\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    Dom.setStyle(insertedEl, 'background-color', '');\n}",
    "receiverBase": "onComplete",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    Dom.setStyle(insertedEl, 'background-color', '');\n}",
    "receiverBase": "onComplete",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function (e) {\n    YAHOO.lang.later(10, this, function () {\n        this.onChange(e);\n    });\n}",
    "receiverBase": "Event",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    this.onChange(e);\n}",
    "receiverBase": "lang",
    "receiverCallee": "later"
  },
  {
    "callback": "function () {\n    Dom.setStyle(this.formattedContainer, 'background-color', '');\n}",
    "receiverBase": "onComplete",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    that.updatedEvt.fire(newValue);\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (e) {\n    Event.stopPropagation(e);\n}",
    "receiverBase": "Event",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    this.alertPanel.hide();\n}",
    "receiverBase": "Event",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    this.markUnsaved();\n}",
    "receiverBase": "updatedEvt",
    "receiverCallee": "subscribe"
  },
  {
    "callback": "function () {\n    Event.addListener('loadFilter', 'keyup', this.inputFilterTimer, this, true);\n}",
    "receiverBase": "Event",
    "receiverCallee": "onAvailable"
  },
  {
    "callback": "function () {\n    that.updateLoadPanelList(Dom.get('loadFilter').value);\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (e, args) {\n    this.loadPipe(Event.getTarget(e).innerHTML);\n}",
    "receiverBase": "Event",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function (token, urlPart) {\n    autoLoginEnabled = false;\n    window.location.hash = '';\n    Meteor.startup(function () {\n        if (accountsCallbacks[urlPart]) {\n            accountsCallbacks[urlPart](token, enableAutoLogin);\n        }\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "attemptToMatchHash"
  },
  {
    "callback": "function () {\n    if (accountsCallbacks[urlPart]) {\n        accountsCallbacks[urlPart](token, enableAutoLogin);\n    }\n}",
    "receiverBase": "Meteor",
    "receiverCallee": "startup"
  },
  {
    "callback": "function (expect, subject, value) {\n    expect(uglifyJs.uglify.gen_code(new CldrPluralRule(subject).toJavaScriptAst(), { beautify: true }), 'to equal', value);\n}",
    "receiverBase": "expect",
    "receiverCallee": "addAssertion"
  },
  {
    "callback": "function () {\n    if (typeof window != 'undefined' && window.constructor.name == 'DOMWindow' || typeof process != 'undefined') {\n        return this.constructor.name;\n    }\n    var str = Object.prototype.toString.call(this);\n    str = str.substring(8, str.length - 1);\n    if (str == 'Window') {\n        str = 'DOMWindow';\n    } else if (str == 'Document') {\n        str = 'HTMLDocument';\n    }\n    return str;\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function (i) {\n    var proto = Object.getPrototypeOf(this);\n    if (proto !== Object) {\n        proto.$index = function (i) {\n            return this[i];\n        };\n    }\n    return this[i];\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function (index) {\n    var i = index | 0;\n    if (i !== index) {\n        throw new IllegalArgumentException('index is not int');\n    } else if (i < 0 || i >= this.length) {\n        throw new IndexOutOfRangeException(index);\n    }\n    return this[i];\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function (i) {\n    return this[i];\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function () {\n    'use strict';\n    return this;\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function (name, args) {\n    $throw(new NoSuchMethodException(this, name, args));\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function () {\n    return this.noSuchMethod('getContext', []);\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function () {\n    return this.length;\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function (value) {\n    return this.length = value;\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function (value) {\n    this.push(value);\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function () {\n    this.set$length(0);\n}",
    "receiverBase": "",
    "receiverCallee": "$defProp"
  },
  {
    "callback": "function () {\n    var input = $(this), numFiles = input.get(0).files ? input.get(0).files.length : 1, label = input.val().replace(/\\\\/g, '/').replace(/.*\\//, '');\n    input.trigger('fileselect', [\n        numFiles,\n        label\n    ]);\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function exchangeChannel(name, opts) {\n    opts = opts || {};\n    opts.matcher = opts.matcher || exchangeDispatcher.matchers.literal;\n    opts.dispatcher = opts.dispatcher || broadcastDispatcher;\n    return this._channel(name, exchangeDispatcher(opts.matcher, opts.dispatcher), 'exchange');\n}",
    "receiverBase": "utils",
    "receiverCallee": "optionalName"
  },
  {
    "callback": "function topicExchangeChannel(name) {\n    return this._channel(name, exchangeDispatcher(exchangeDispatcher.matchers.topical, broadcastDispatcher), 'topic-exchange');\n}",
    "receiverBase": "utils",
    "receiverCallee": "optionalName"
  },
  {
    "callback": "function (name) {\n    if (name)\n        self[name] = settings[name] || noop;\n}",
    "receiverBase": "tinymce",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    $(this.parentNode.parentNode).addClass('edit');\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    var caption = $(this).val();\n    $(this.parentNode.parentNode).find('img').attr('title', caption);\n    $(this.parentNode.parentNode).removeClass('edit');\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    $(this.parentNode).remove();\n    context.find('a.' + this.parentNode.className).show();\n    return false;\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    $('.respond-slideshow div').sortable({\n        handle: 'img',\n        items: 'span.image',\n        placeholder: 'editor-highlight',\n        opacity: '0.6',\n        axis: 'x'\n    });\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    var node = $(respond.editor.currNode);\n    node.find('.field-list').append(respond.component.form.buildMock('text', 'Field', 'field-1', 'false', '', '', '', ''));\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    $('.respond-form>div').sortable({\n        handle: '.mock-field',\n        placeholder: 'editor-highlight',\n        opacity: '0.6',\n        axis: 'y'\n    });\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    var $el = $(this);\n    var id = utilities.toTitleCase($el.val());\n    var fscope = angular.element($el).scope();\n    fscope.element.id = id;\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    $(this).parent().toggleClass('active');\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    var node = $(respond.editor.currNode);\n    var uniqId = utilities.uniqid();\n    node.find('.shelf-items').append(respond.component.shelf.buildMock(uniqId, uniqId, 'New Product', '9.99', 'not shipped', '', ''));\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    $('.respond-shelf>div').sortable({\n        placeholder: 'editor-highlight',\n        opacity: '0.6',\n        axis: 'y'\n    });\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    $(this).parent().toggleClass('active');\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function (context) {\n    UI.$('[data-@-switcher]', context).each(function () {\n        var switcher = UI.$(this);\n        if (!switcher.data('switcher')) {\n            var obj = UI.switcher(switcher, UI.Utils.options(switcher.attr('data-@-switcher')));\n        }\n    });\n}",
    "receiverBase": "UI",
    "receiverCallee": "ready"
  },
  {
    "callback": "function () {\n    var switcher = UI.$(this);\n    if (!switcher.data('switcher')) {\n        var obj = UI.switcher(switcher, UI.Utils.options(switcher.attr('data-@-switcher')));\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function (e) {\n    e.preventDefault();\n    $this.show(this);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "on"
  },
  {
    "callback": "function (e) {\n    e.preventDefault();\n    var item = UI.$(this).data(UI._prefix + 'SwitcherItem');\n    if ($this.index == item)\n        return;\n    switch (item) {\n    case 'next':\n    case 'previous':\n        $this.show($this.index + (item == 'next' ? 1 : -1));\n        break;\n    default:\n        $this.show(item);\n    }\n}",
    "receiverBase": "connect",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    var container = UI.$(this), children = UI.$(container.children()), current = UI.$(children.filter('.@-active')), next = UI.$(children.eq($this.index));\n    $this.animating = true;\n    animation.apply($this, [\n        current,\n        next\n    ]).then(function () {\n        current.removeClass('@-active');\n        next.addClass('@-active');\n        UI.Utils.checkDisplay(next, true);\n        $this.animating = false;\n    });\n}",
    "receiverBase": "connect",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    current.removeClass('@-active');\n    next.addClass('@-active');\n    UI.Utils.checkDisplay(next, true);\n    $this.animating = false;\n}",
    "receiverBase": "apply",
    "receiverCallee": "then"
  },
  {
    "callback": "function (i) {\n    t += speed / that._numBoxes;\n    $boxes.eq(indices[i]).delay(t).animate({ opacity: 1 }, speed * 0.3, function () {\n        that._checkComplete();\n    });\n}",
    "receiverBase": "$boxes",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    that._checkComplete();\n}",
    "receiverBase": "delay",
    "receiverCallee": "animate"
  },
  {
    "callback": "function (key) {\n    var err = new AssertionError(null, key);\n    if (err.message.indexOf(components[key]) < 0) {\n        throw new Error('Expected error of type \\'' + components[key] + '\\'');\n    }\n}",
    "receiverBase": "keys",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function () {\n    var err = new AssertionError(), node = cheerio.load('<node />')('node')[0];\n    err.addNode.should.be.a('function');\n    expect(err.addNode(null)).to.equal(undefined);\n    err.addNode(node).should.be.a('string');\n    err.addNode(node).should.equal('<node>');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    pullHook._events = undefined;\n    element.data('ons-pull-hook', undefined);\n    scope = element = attrs = null;\n}",
    "receiverBase": "scope",
    "receiverCallee": "$on"
  },
  {
    "callback": "function (unique, filter, every, contains, slice) {\n    function intersection(arr) {\n        var arrs = slice(arguments, 1), result = filter(unique(arr), function (needle) {\n                return every(arrs, function (haystack) {\n                    return contains(haystack, needle);\n                });\n            });\n        return result;\n    }\n    return intersection;\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (needle) {\n    return every(arrs, function (haystack) {\n        return contains(haystack, needle);\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (haystack) {\n    return contains(haystack, needle);\n}",
    "receiverBase": "",
    "receiverCallee": "every"
  },
  {
    "callback": "function (exports) {\n    return self.instantiateMontageObject(value, exports, objectName, context, label);\n}",
    "receiverBase": "module",
    "receiverCallee": "then"
  },
  {
    "callback": "function (error) {\n    if (error.stack) {\n        console.error(error.stack);\n    }\n    throw new Error('Error deserializing \"' + label + '\" when loading module \"' + locationDesc.moduleId + '\\' from \\'' + value.prototype + '\\'');\n}",
    "receiverBase": "module",
    "receiverCallee": "then"
  },
  {
    "callback": "function (montageObjectDesc) {\n    return self.deserializeMontageObject(montageObjectDesc, object, context, label);\n}",
    "receiverBase": "montageObjectDesc",
    "receiverCallee": "then"
  },
  {
    "callback": "function () {\n    return object;\n}",
    "receiverBase": "properties",
    "receiverCallee": "then"
  },
  {
    "callback": "function (substituteObject) {\n    context.setObjectLabel(substituteObject, label);\n    return substituteObject;\n}",
    "receiverBase": "substituteObject",
    "receiverCallee": "then"
  },
  {
    "callback": "function () {\n    self._invokeDeserializedFromSerialization(objects, context);\n}",
    "receiverBase": "value",
    "receiverCallee": "then"
  }
]