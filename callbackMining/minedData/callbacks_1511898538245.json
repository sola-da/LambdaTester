[
  {
    "callback": "function () {\n    if (request.readyState !== 0) {\n        request.send(config.data);\n    }\n}",
    "receiverBase": "window",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function () {\n    $(this).find(opts.search).detach().appendTo($header);\n}",
    "receiverBase": "$navs",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var $link = $(this);\n    options.push($('<option>').val($link.attr('href')).text($link.text()));\n}",
    "receiverBase": "find",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, opt) {\n    $optgroup.append(opt);\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, grp) {\n    optgroups.push($(grp));\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    $select.append($(this));\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    window.location = $(this).find(':selected').val();\n}",
    "receiverBase": "$select",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    EntityArtifact = EntityBaseChachki.extend({\n        _wmIgnore: false,\n        animSheet: new ig.AnimationSheet('media/games/jetroid/images/artifacts.png', 5, 9),\n        name: 'Artifact',\n        types: [\n            'Worthless',\n            'Normal',\n            'Special',\n            'Rare'\n        ],\n        size: {\n            x: 5,\n            y: 9\n        }\n    });\n}",
    "receiverBase": "requires",
    "receiverCallee": "defines"
  },
  {
    "callback": "function () {\n    assert.equal(string.isString('hi'), true);\n    assert.equal(string.isString(String('hi')), true);\n    assert.equal(string.isString(new String('hi')), true);\n    assert.equal(string.isString(23), false);\n    assert.equal(string.isString(true), false);\n    assert.equal(string.isString(new Date()), false);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    assert.equal(string.endsWith('hello', 'hello'), true);\n    assert.equal(string.endsWith('hello', 'lo'), true);\n    assert.equal(string.endsWith('hello', ''), true);\n    assert.equal(string.endsWith('hello!', 'lo'), false);\n    assert.equal(string.endsWith('hello', 'LO'), false);\n    assert.equal(string.endsWith('hello', 'hellohello'), false);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    assert.equal(string.format(2.3), '2.3');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var B = BigNumber.config({ precision: 20 });\n    assert.equal(string.format(new B(1).div(3)), '0.33333333333333333333');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    assert.equal(string.format(1.23456, 3), '1.23');\n    assert.equal(string.format(1.23456, { precision: 3 }), '1.23');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    assert.equal(string.format([\n        1,\n        2,\n        3\n    ]), '[1, 2, 3]');\n    assert.equal(string.format([\n        [\n            1,\n            2\n        ],\n        [\n            3,\n            4\n        ]\n    ]), '[[1, 2], [3, 4]]');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    assert.equal(string.format('string'), '\"string\"');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    var obj = {\n            format: function (options) {\n                var str = 'obj';\n                if (options !== undefined) {\n                    str += ' ' + JSON.stringify(options);\n                }\n                return str;\n            }\n        };\n    assert.equal(string.format(obj), 'obj');\n    assert.equal(string.format(obj, 4), 'obj 4');\n    assert.equal(string.format(obj, { precision: 4 }), 'obj {\"precision\":4}');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    assert.equal(string.format(function (a, b) {\n        return a + b;\n    }), 'function');\n    var f = function (a, b) {\n        return a + b;\n    };\n    f.syntax = 'f(x, y)';\n    assert.equal(string.format(f), 'f(x, y)');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (a, b) {\n    return a + b;\n}",
    "receiverBase": "string",
    "receiverCallee": "format"
  },
  {
    "callback": "function () {\n    assert.equal(string.format({}), '[object Object]');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function () {\n    assert.equal(string.format(true), 'true');\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (mod) {\n    if (typeof exports == 'object' && typeof module == 'object')\n        mod(require('../../lib/codemirror'));\n    else if (typeof define == 'function' && define.amd)\n        define(['../../lib/codemirror'], mod);\n    else\n        mod(CodeMirror);\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (securityGroup) {\n    return securityGroup.get('_id');\n}",
    "receiverBase": "securityGroups",
    "receiverCallee": "map"
  },
  {
    "callback": "function (instance) {\n    return instance.InstanceId;\n}",
    "receiverBase": "Instances",
    "receiverCallee": "map"
  },
  {
    "callback": "function (instanceId, next) {\n    self.waitForOne({ _id: String(instanceId) }, next);\n}",
    "receiverBase": "async",
    "receiverCallee": "map"
  },
  {
    "callback": "function (instance, next) {\n    instance.wait({ state: 'running' }, next);\n}",
    "receiverBase": "async",
    "receiverCallee": "map"
  },
  {
    "callback": "function (r) {\n    return r.Instances;\n}",
    "receiverBase": "Reservations",
    "receiverCallee": "map"
  },
  {
    "callback": "function (instance) {\n    return instance.State.Name !== 'terminated';\n}",
    "receiverBase": "instances",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (securityGroup) {\n    return securityGroup.GroupId;\n}",
    "receiverBase": "SecurityGroups",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    var searchDialog = this.__createSearchDialog();\n    searchDialog.show();\n}",
    "receiverBase": "searchBtn",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    var popup = this.__createAreYouSurePopup(this.__goBackBtn);\n    popup.show();\n}",
    "receiverBase": "__goBackBtn",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    var popup = this.__createSearchPopup();\n    popup.show();\n    qx.lang.Function.delay(popup.hide, 3000, popup);\n}",
    "receiverBase": "__loadButton",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    this.__deleteDialog = qx.ui.mobile.dialog.Manager.getInstance().warning('Deleting', 'Are you sure?', this.__processDelete, this, [\n        'Yes',\n        'No'\n    ]);\n}",
    "receiverBase": "deleteButton",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    this.__areYouSurePopup.hide();\n}",
    "receiverBase": "okButton",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    this.__areYouSurePopup.hide();\n}",
    "receiverBase": "cancelButton",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function () {\n    this.__searchDialog.hide();\n}",
    "receiverBase": "searchButton",
    "receiverCallee": "addListener"
  },
  {
    "callback": "function (hint) {\n    return splitUrl[0].indexOf(hint) > -1;\n}",
    "receiverBase": "_",
    "receiverCallee": "some"
  },
  {
    "callback": "function (value) {\n    if (referrerHeader.indexOf(value) > -1) {\n        passingReferrer = true;\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (value) {\n    if (referrerHeader.indexOf(value) > -1) {\n        passingReferrer = true;\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    require.ensurePackage(msg.pkg, function () {\n        var module = require(msg.module);\n        target = module[msg.target];\n        messageQueue.shift();\n        pump();\n    });\n}",
    "receiverBase": "pr",
    "receiverCallee": "then"
  },
  {
    "callback": "function () {\n    var module = require(msg.module);\n    target = module[msg.target];\n    messageQueue.shift();\n    pump();\n}",
    "receiverBase": "require",
    "receiverCallee": "ensurePackage"
  },
  {
    "callback": "function (e) {\n    throw e;\n}",
    "receiverBase": "rv",
    "receiverCallee": "then"
  },
  {
    "callback": "function () {\n    element_settings.element = this;\n    var ahah = new Drupal.ahah(base, element_settings);\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    $(element_settings.element).parents('form').ajaxSubmit(options);\n    return false;\n}",
    "receiverBase": "$",
    "receiverCallee": "bind"
  },
  {
    "callback": "function (event) {\n    if (event.keyCode == 13) {\n        $(element_settings.element).trigger(element_settings.event);\n        return false;\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "keypress"
  },
  {
    "callback": "function () {\n    function checkBrowser() {\n        if (!window.FileReader) {\n            alert('\\tWARNING!\\nYour web browser is not supported. This program might not behave as intended. Please use a recent version of Google Chrome, Firefox or Safari browser.');\n        }\n    }\n    return { checkBrowser: checkBrowser };\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (data) {\n    if (data && data.duration) {\n        this.duration = data.duration;\n    }\n}",
    "receiverBase": "dojo",
    "receiverCallee": "connect"
  },
  {
    "callback": "function () {\n    dojo.disconnect(this.posCon);\n    this.setHandle(this.duration);\n}",
    "receiverBase": "dojo",
    "receiverCallee": "connect"
  },
  {
    "callback": "function () {\n    this.posCon = dojo.connect(this.media, 'onPosition', this, 'setHandle');\n}",
    "receiverBase": "dojo",
    "receiverCallee": "connect"
  },
  {
    "callback": "function (percent) {\n    this.setLoadedPosition(percent * 0.01);\n    this.width = this.finalWidth * 0.01 * percent;\n}",
    "receiverBase": "dojo",
    "receiverCallee": "connect"
  }
]