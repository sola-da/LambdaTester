[
  {
    "callback": "function fun(a, b, c) {\n    arg = arguments;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    it('can be imported without blowing up', function () {\n        var app = require('../app');\n        assert(app !== undefined);\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function () {\n    var app = require('../app');\n    assert(app !== undefined);\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function ($, Backbone) {\n    var LogoutView = Backbone.View.extend({\n            initialize: function () {\n            }\n        });\n    return LogoutView;\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (dojo) {\n    dojo.declare('dojox.math.random.Simple', null, {\n        destroy: function () {\n        },\n        nextBytes: function (byteArray) {\n            for (var i = 0, l = byteArray.length; i < l; ++i) {\n                byteArray[i] = Math.floor(256 * Math.random());\n            }\n        }\n    });\n    return dojox.math.random.Simple;\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (f, define) {\n    define([], f);\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (key, value) {\n    Ext.Loader.setPath(key, value);\n}",
    "receiverBase": "Object",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    for (i = 0; i < ln; i++) {\n        controller = this.getController(controllers[i]);\n        controller.init(this);\n    }\n    this.onBeforeLaunch.call(this);\n}",
    "receiverBase": "Ext",
    "receiverCallee": "onReady"
  },
  {
    "callback": "function (controller) {\n    controller.onLaunch(this);\n}",
    "receiverBase": "controllers",
    "receiverCallee": "each"
  }
]