[
  {
    "callback": "function (handler) {\n    handler(rekapi, opt_data);\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (actor) {\n    actorLengths.push(actor.getEnd());\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (actor) {\n    var fnKeyframes = _.where(actor._keyframeProperties, lookupObject);\n    var lastFnKeyframe = _.last(fnKeyframes);\n    if (lastFnKeyframe && !lastFnKeyframe.hasFired) {\n        lastFnKeyframe.invoke();\n    }\n    keyframeResetList = keyframeResetList.concat(fnKeyframes);\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (fnKeyframe) {\n    fnKeyframe.hasFired = false;\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    tick(this);\n    updateToCurrentMillisecond(this);\n}",
    "receiverBase": "_",
    "receiverCallee": "bind"
  },
  {
    "callback": "function (rendererInitHook) {\n    rendererInitHook(this);\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (actor) {\n    actor.stop();\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (actor) {\n    actor._updateState(opt_millisecond);\n    if (typeof actor.render === 'function') {\n        actor.render(actor.context, actor.get());\n    }\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (actor) {\n    exportData.actors.push(actor.exportTimeline());\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (actorData) {\n    var actor = new Rekapi.Actor();\n    actor.importTimeline(actorData);\n    this.addActor(actor);\n}",
    "receiverBase": "_",
    "receiverCallee": "each"
  },
  {
    "callback": "function (d, i) {\n    return uv.util.getColorBand(self.config, i);\n}",
    "receiverBase": "attr",
    "receiverCallee": "style"
  },
  {
    "callback": "function (d) {\n    return 'translate(' + arcfunc.centroid(d) + ')';\n}",
    "receiverBase": "append",
    "receiverCallee": "attr"
  },
  {
    "callback": "function (d) {\n    return uv.util.getLabelValue(self, d);\n}",
    "receiverBase": "style",
    "receiverCallee": "text"
  },
  {
    "callback": "function (d, i) {\n    return uv.util.getTooltipText(self, self.category, self.labels[i], d);\n}",
    "receiverBase": "append",
    "receiverCallee": "text"
  },
  {
    "callback": "function (str) {\n    return str.toLowerCase();\n}",
    "receiverBase": "sHtml",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (str, p1, p2) {\n    return ' ' + p1.toLowerCase() + p2;\n}",
    "receiverBase": "replace",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (chr) {\n    return escape(chr);\n}",
    "receiverBase": "$3",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (str) {\n    return str.replace(/<br \\/>/g, '\\n');\n}",
    "receiverBase": "s",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (tag) {\n    return editor.cleanHTML(tag);\n}",
    "receiverBase": "innerHTML",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (tag) {\n    if (/^<[!\\?]/.test(tag))\n        return tag;\n    else if (!(editor.config.htmlRemoveTags && editor.config.htmlRemoveTags.test(tag.replace(/<([^\\s>\\/]+)/, '$1'))))\n        return editor.cleanHTML(tag);\n    else\n        return '';\n}",
    "receiverBase": "innerhtml",
    "receiverCallee": "replace"
  },
  {
    "callback": "function () {\n    describe('TargetSource', function () {\n        it('should do TargetSource right', function (done) {\n            var targetSource = new TargetSource();\n            var Car = function () {\n            };\n            targetSource.setBeanName('car');\n            targetSource.setTarget(new Car());\n            done();\n        });\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function () {\n    it('should do TargetSource right', function (done) {\n        var targetSource = new TargetSource();\n        var Car = function () {\n        };\n        targetSource.setBeanName('car');\n        targetSource.setTarget(new Car());\n        done();\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "describe"
  },
  {
    "callback": "function (done) {\n    var targetSource = new TargetSource();\n    var Car = function () {\n    };\n    targetSource.setBeanName('car');\n    targetSource.setTarget(new Car());\n    done();\n}",
    "receiverBase": "",
    "receiverCallee": "it"
  },
  {
    "callback": "function (done) {\n    exponentialRetryPolicyFilter = new ExponentialRetryPolicyFilter();\n    tableService = storage.createTableService().withFilter(exponentialRetryPolicyFilter);\n    suiteUtil = tabletestutil.createTableTestUtils(tableService, testPrefix);\n    suiteUtil.setupSuite(done);\n}",
    "receiverBase": "",
    "receiverCallee": "suiteSetup"
  },
  {
    "callback": "function (done) {\n    suiteUtil.teardownSuite(done);\n}",
    "receiverBase": "",
    "receiverCallee": "suiteTeardown"
  },
  {
    "callback": "function (done) {\n    suiteUtil.setupTest(done);\n}",
    "receiverBase": "",
    "receiverCallee": "setup"
  },
  {
    "callback": "function (done) {\n    suiteUtil.teardownTest(done);\n}",
    "receiverBase": "",
    "receiverCallee": "teardown"
  },
  {
    "callback": "function (err) {\n    assert.equal(err, null);\n    tableService.createTable(tableName, function (err2) {\n        assert.notEqual(err2, null);\n        assert.equal(err2.code, Constants.TableErrorCodeStrings.TABLE_ALREADY_EXISTS);\n        assert.equal(err2.innerError, null);\n        done();\n    });\n}",
    "receiverBase": "tableService",
    "receiverCallee": "createTable"
  },
  {
    "callback": "function (err2) {\n    assert.notEqual(err2, null);\n    assert.equal(err2.code, Constants.TableErrorCodeStrings.TABLE_ALREADY_EXISTS);\n    assert.equal(err2.innerError, null);\n    done();\n}",
    "receiverBase": "tableService",
    "receiverCallee": "createTable"
  },
  {
    "callback": "function (err) {\n    assert.equal(err, null);\n    tableService.deleteTable(tableName, function (err2) {\n        assert.equal(err2, null);\n        tableService.createTable(tableName, function (err3) {\n            assert.equal(err3, null);\n            done();\n        });\n    });\n}",
    "receiverBase": "tableService",
    "receiverCallee": "createTable"
  },
  {
    "callback": "function (err2) {\n    assert.equal(err2, null);\n    tableService.createTable(tableName, function (err3) {\n        assert.equal(err3, null);\n        done();\n    });\n}",
    "receiverBase": "tableService",
    "receiverCallee": "deleteTable"
  },
  {
    "callback": "function (err3) {\n    assert.equal(err3, null);\n    done();\n}",
    "receiverBase": "tableService",
    "receiverCallee": "createTable"
  },
  {
    "callback": "function (done) {\n    var tableName = testutil.generateId(tablePrefix, tableNames, suiteUtil.isMocked);\n    var retryCount = 3;\n    var retryInterval = 30;\n    exponentialRetryPolicyFilter.retryCount = retryCount;\n    exponentialRetryPolicyFilter.retryInterval = retryInterval;\n    tableService.getTable(tableName, function (err, table) {\n        assert.equal(err.code, Constants.StorageErrorCodeStrings.RESOURCE_NOT_FOUND);\n        assert.equal(table, null);\n        done();\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "test"
  },
  {
    "callback": "function (err, table) {\n    assert.equal(err.code, Constants.StorageErrorCodeStrings.RESOURCE_NOT_FOUND);\n    assert.equal(table, null);\n    done();\n}",
    "receiverBase": "tableService",
    "receiverCallee": "getTable"
  },
  {
    "callback": "function (err) {\n    console.error(err.stack);\n}",
    "receiverBase": "server",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    readySock = dgram.createSocket('udp4');\n    readySock.on('error', function (err) {\n        console.error(err.stack);\n    });\n    readySock.send('listening', 0, 'listening'.length, READY_PORT, '127.0.0.1');\n}",
    "receiverBase": "server",
    "receiverCallee": "on"
  },
  {
    "callback": "function (err) {\n    console.error(err.stack);\n}",
    "receiverBase": "readySock",
    "receiverCallee": "on"
  },
  {
    "callback": "function (err) {\n    console.error(err.stack);\n    sock.write(err.message);\n}",
    "receiverBase": "sock",
    "receiverCallee": "on"
  },
  {
    "callback": "function (data) {\n    if (data.toString() === 'beep') {\n        sock.write('boop');\n    } else {\n        sock.write('fail');\n    }\n}",
    "receiverBase": "sock",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    readySock.send('end', 0, 'end'.length, READY_PORT, '127.0.0.1');\n}",
    "receiverBase": "sock",
    "receiverCallee": "on"
  },
  {
    "callback": "function (elem, i) {\n    return callback.call(elem, i, elem);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function (i, name) {\n    class2type['[object ' + name + ']'] = name.toLowerCase();\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (div) {\n    div.appendChild(doc.createComment(''));\n    return !div.getElementsByTagName('*').length;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.className = 'i';\n    return !div.getAttribute('className');\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<div class=\\'a\\'></div><div class=\\'a i\\'></div>';\n    div.firstChild.className = 'i';\n    return div.getElementsByClassName('i').length === 2;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div1) {\n    return div1.compareDocumentPosition(document.createElement('div')) & 1;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    docElem.appendChild(div).id = expando;\n    return !doc.getElementsByName || !doc.getElementsByName(expando).length;\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<select><option selected=\\'\\'></option></select>';\n    if (!div.querySelectorAll('[selected]').length) {\n        rbuggyQSA.push('\\\\[' + whitespace + '*(?:value|' + booleans + ')');\n    }\n    if (!div.querySelectorAll(':checked').length) {\n        rbuggyQSA.push(':checked');\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    var input = document.createElement('input');\n    input.setAttribute('type', 'hidden');\n    div.appendChild(input).setAttribute('t', '');\n    if (div.querySelectorAll('[t^=\\'\\']').length) {\n        rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\\'\\'|\"\")');\n    }\n    if (!div.querySelectorAll(':enabled').length) {\n        rbuggyQSA.push(':enabled', ':disabled');\n    }\n    div.querySelectorAll('*,:x');\n    rbuggyQSA.push(',.*:');\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    support.disconnectedMatch = matches.call(div, 'div');\n    matches.call(div, '[s!=\\'\\']:x');\n    rbuggyMatches.push('!=', pseudos);\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (argument) {\n    argument = +argument;\n    return markFunction(function (seed, matches) {\n        var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n        while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n                seed[j] = !(matches[j] = seed[j]);\n            }\n        }\n    });\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (seed, matches) {\n    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n    while (i--) {\n        if (seed[j = matchIndexes[i]]) {\n            seed[j] = !(matches[j] = seed[j]);\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (elem) {\n    return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute('class') || '');\n}",
    "receiverBase": "",
    "receiverCallee": "classCache"
  },
  {
    "callback": "function (seed, matches) {\n    var idx, matched = fn(seed, argument), i = matched.length;\n    while (i--) {\n        idx = indexOf.call(seed, matched[i]);\n        seed[idx] = !(matches[idx] = matched[i]);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (seed, matches, context, xml) {\n    var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;\n    while (i--) {\n        if (elem = unmatched[i]) {\n            seed[i] = !(matches[i] = elem);\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (selector) {\n    return function (elem) {\n        return Sizzle(selector, elem).length > 0;\n    };\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function (text) {\n    return function (elem) {\n        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n    };\n}",
    "receiverBase": "",
    "receiverCallee": "markFunction"
  },
  {
    "callback": "function () {\n    return [0];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    return [length - 1];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    return [argument < 0 ? argument + length : argument];\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    var i = 0;\n    for (; i < length; i += 2) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length) {\n    var i = 1;\n    for (; i < length; i += 2) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    var i = argument < 0 ? argument + length : argument;\n    for (; --i >= 0;) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (matchIndexes, length, argument) {\n    var i = argument < 0 ? argument + length : argument;\n    for (; ++i < length;) {\n        matchIndexes.push(i);\n    }\n    return matchIndexes;\n}",
    "receiverBase": "",
    "receiverCallee": "createPositionalPseudo"
  },
  {
    "callback": "function (elem) {\n    return elem === checkContext;\n}",
    "receiverBase": "",
    "receiverCallee": "addCombinator"
  },
  {
    "callback": "function (elem) {\n    return indexOf.call(checkContext, elem) > -1;\n}",
    "receiverBase": "",
    "receiverCallee": "addCombinator"
  },
  {
    "callback": "function (div) {\n    div.innerHTML = '<a href=\\'#\\'></a>';\n    if (div.firstChild.getAttribute('href') !== '#') {\n        var attrs = 'type|href|height|width'.split('|'), i = attrs.length;\n        while (i--) {\n            Expr.attrHandle[attrs[i]] = interpolationHandler;\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (div) {\n    if (div.getAttribute('disabled') != null) {\n        var attrs = booleans.split('|'), i = attrs.length;\n        while (i--) {\n            Expr.attrHandle[attrs[i]] = boolHandler;\n        }\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "assert"
  },
  {
    "callback": "function (_, flag) {\n    object[flag] = true;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function add(args) {\n    jQuery.each(args, function (_, arg) {\n        var type = jQuery.type(arg);\n        if (type === 'function') {\n            if (!options.unique || !self.has(arg)) {\n                list.push(arg);\n            }\n        } else if (arg && arg.length && type !== 'string') {\n            add(arg);\n        }\n    });\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (_, arg) {\n    var type = jQuery.type(arg);\n    if (type === 'function') {\n        if (!options.unique || !self.has(arg)) {\n            list.push(arg);\n        }\n    } else if (arg && arg.length && type !== 'string') {\n        add(arg);\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (_, arg) {\n    var index;\n    while ((index = jQuery.inArray(arg, list, index)) > -1) {\n        list.splice(index, 1);\n        if (firing) {\n            if (index <= firingLength) {\n                firingLength--;\n            }\n            if (index <= firingIndex) {\n                firingIndex--;\n            }\n        }\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, tuple) {\n    var action = tuple[0], fn = jQuery.isFunction(fns[i]) && fns[i];\n    deferred[tuple[1]](function () {\n        var returned = fn && fn.apply(this, arguments);\n        if (returned && jQuery.isFunction(returned.promise)) {\n            returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n        } else {\n            newDefer[action + 'With'](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n        }\n    });\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var returned = fn && fn.apply(this, arguments);\n    if (returned && jQuery.isFunction(returned.promise)) {\n        returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n    } else {\n        newDefer[action + 'With'](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n    }\n}",
    "receiverBase": "",
    "receiverCallee": "deferred"
  },
  {
    "callback": "function (i, tuple) {\n    var list = tuple[2], stateString = tuple[3];\n    promise[tuple[1]] = list.add;\n    if (stateString) {\n        list.add(function () {\n            state = stateString;\n        }, tuples[i ^ 1][2].disable, tuples[2][2].lock);\n    }\n    deferred[tuple[0]] = function () {\n        deferred[tuple[0] + 'With'](this === deferred ? promise : this, arguments);\n        return this;\n    };\n    deferred[tuple[0] + 'With'] = list.fireWith;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    state = stateString;\n}",
    "receiverBase": "list",
    "receiverCallee": "add"
  },
  {
    "callback": "function () {\n    support.boxSizing = div.offsetWidth === 4;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "swap"
  },
  {
    "callback": "function () {\n    data_user.set(this, key);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var data = data_user.get(this, camelKey);\n    data_user.set(this, camelKey, value);\n    if (key.indexOf('-') !== -1 && data !== undefined) {\n        data_user.set(this, key, value);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    data_user.remove(this, key);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    data_priv.remove(elem, [\n        type + 'queue',\n        key\n    ]);\n}",
    "receiverBase": "Callbacks",
    "receiverCallee": "add"
  },
  {
    "callback": "function () {\n    var queue = jQuery.queue(this, type, data);\n    jQuery._queueHooks(this, type);\n    if (type === 'fx' && queue[0] !== 'inprogress') {\n        jQuery.dequeue(this, type);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.dequeue(this, type);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (next, hooks) {\n    var timeout = setTimeout(next, time);\n    hooks.stop = function () {\n        clearTimeout(timeout);\n    };\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "queue"
  },
  {
    "callback": "function () {\n    jQuery.removeAttr(this, name);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    delete this[jQuery.propFix[name] || name];\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (j) {\n    jQuery(this).addClass(value.call(this, j, this.className));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (j) {\n    jQuery(this).removeClass(value.call(this, j, this.className));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (value) {\n    return value == null ? '' : value + '';\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function (i, name) {\n    var getter = jQuery.expr.attrHandle[name] || jQuery.find.attr;\n    jQuery.expr.attrHandle[name] = function (elem, name, isXML) {\n        var fn = jQuery.expr.attrHandle[name], ret = isXML ? undefined : (jQuery.expr.attrHandle[name] = undefined) != getter(elem, name, isXML) ? name.toLowerCase() : null;\n        jQuery.expr.attrHandle[name] = fn;\n        return ret;\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.valHooks[this] = {\n        set: function (elem, value) {\n            if (jQuery.isArray(value)) {\n                return elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0;\n            }\n        }\n    };\n    if (!jQuery.support.checkOn) {\n        jQuery.valHooks[this].get = function (elem) {\n            return elem.getAttribute('value') === null ? 'on' : elem.value;\n        };\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.event.add(this, types, fn, data, selector);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.event.remove(this, types, fn, selector);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jQuery.event.trigger(type, data, this);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    for (i = 0; i < l; i++) {\n        if (jQuery.contains(self[i], this)) {\n            return true;\n        }\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "filter"
  },
  {
    "callback": "function () {\n    var i = 0;\n    for (; i < l; i++) {\n        if (jQuery.contains(this, targets[i])) {\n            return true;\n        }\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (elem) {\n    return elem.nodeType === 1;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem, i) {\n    return !!qualifier.call(elem, i, elem) !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return elem === qualifier !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (elem) {\n    return core_indexOf.call(qualifier, elem) >= 0 !== not;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (value) {\n    return value === undefined ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "access"
  },
  {
    "callback": "function (elem) {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        var target = manipulationTarget(this, elem);\n        target.appendChild(elem);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n        var target = manipulationTarget(this, elem);\n        target.insertBefore(elem, target.firstChild);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.parentNode) {\n        this.parentNode.insertBefore(elem, this);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (elem) {\n    if (this.parentNode) {\n        this.parentNode.insertBefore(elem, this.nextSibling);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function () {\n    return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function (elem) {\n    return [\n        elem.nextSibling,\n        elem.parentNode\n    ];\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function (elem) {\n    var next = args[i++], parent = args[i++];\n    if (parent) {\n        jQuery(this).remove();\n        parent.insertBefore(elem, next);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "domManip"
  },
  {
    "callback": "function (index) {\n    var self = set.eq(index);\n    if (isFunction) {\n        args[0] = value.call(this, index, self.html());\n    }\n    self.domManip(args, callback, allowIntersection);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (name, original) {\n    jQuery.fn[name] = function (selector) {\n        var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;\n        for (; i <= last; i++) {\n            elems = i === last ? this : this.clone(true);\n            jQuery(insert[i])[original](elems);\n            core_push.apply(ret, elems.get());\n        }\n        return this.pushStack(ret);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapAll(html.call(this, i));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var elem = this;\n    while (elem.firstElementChild) {\n        elem = elem.firstElementChild;\n    }\n    return elem;\n}",
    "receiverBase": "wrap",
    "receiverCallee": "map"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapInner(html.call(this, i));\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var self = jQuery(this), contents = self.contents();\n    if (contents.length) {\n        contents.wrapAll(html);\n    } else {\n        self.append(html);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i) {\n    jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    if (!jQuery.nodeName(this, 'body')) {\n        jQuery(this).replaceWith(this.childNodes);\n    }\n}",
    "receiverBase": "parent",
    "receiverCallee": "each"
  },
  {
    "callback": "function (elem, name, value) {\n    var styles, len, map = {}, i = 0;\n    if (jQuery.isArray(name)) {\n        styles = getStyles(elem);\n        len = name.length;\n        for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n        }\n        return map;\n    }\n    return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "access"
  },
  {
    "callback": "function () {\n    if (bool ? state : isHidden(this)) {\n        jQuery(this).show();\n    } else {\n        jQuery(this).hide();\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    return getWidthOrHeight(elem, name, extra);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "swap"
  },
  {
    "callback": "function (i, prop) {\n    jQuery.cssHooks[prop] = {\n        get: function (elem, computed) {\n            if (computed) {\n                computed = curCSS(elem, prop);\n                return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;\n            }\n        }\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var elements = jQuery.prop(this, 'elements');\n    return elements ? jQuery.makeArray(elements) : this;\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    var type = this.type;\n    return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !manipulation_rcheckableType.test(type));\n}",
    "receiverBase": "map",
    "receiverCallee": "filter"
  },
  {
    "callback": "function (i, elem) {\n    var val = jQuery(this).val();\n    return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {\n        return {\n            name: elem.name,\n            value: val.replace(rCRLF, '\\r\\n')\n        };\n    }) : {\n        name: elem.name,\n        value: val.replace(rCRLF, '\\r\\n')\n    };\n}",
    "receiverBase": "filter",
    "receiverCallee": "map"
  },
  {
    "callback": "function (val) {\n    return {\n        name: elem.name,\n        value: val.replace(rCRLF, '\\r\\n')\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "map"
  },
  {
    "callback": "function () {\n    add(this.name, this.value);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, v) {\n    if (traditional || rbracket.test(prefix)) {\n        add(prefix, v);\n    } else {\n        buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add);\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (i, name) {\n    jQuery.fn[name] = function (data, fn) {\n        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (_, prefilterOrFactory) {\n    var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n    if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {\n        options.dataTypes.unshift(dataTypeOrTransport);\n        inspect(dataTypeOrTransport);\n        return false;\n    } else if (seekingTransport) {\n        return !(selected = dataTypeOrTransport);\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (responseText) {\n    response = arguments;\n    self.html(selector ? jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : responseText);\n}",
    "receiverBase": "ajax",
    "receiverCallee": "done"
  },
  {
    "callback": "function (i, type) {\n    jQuery.fn[type] = function (fn) {\n        return this.on(type, fn);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    jqXHR.abort('timeout');\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n        if (jQuery.isFunction(data)) {\n            type = type || callback;\n            callback = data;\n            data = undefined;\n        }\n        return jQuery.ajax({\n            url: url,\n            type: method,\n            dataType: type,\n            data: data,\n            success: callback\n        });\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (s) {\n    if (s.cache === undefined) {\n        s.cache = false;\n    }\n    if (s.crossDomain) {\n        s.type = 'GET';\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "ajaxPrefilter"
  },
  {
    "callback": "function () {\n    window[callbackName] = overwritten;\n    if (s[callbackName]) {\n        s.jsonpCallback = originalSettings.jsonpCallback;\n        oldCallbacks.push(callbackName);\n    }\n    if (responseContainer && jQuery.isFunction(overwritten)) {\n        overwritten(responseContainer[0]);\n    }\n    responseContainer = overwritten = undefined;\n}",
    "receiverBase": "jqXHR",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    for (var key in xhrCallbacks) {\n        xhrCallbacks[key]();\n    }\n    xhrCallbacks = undefined;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    fxNow = undefined;\n}",
    "receiverBase": "",
    "receiverCallee": "setTimeout"
  },
  {
    "callback": "function (prop, value) {\n    var collection = (tweeners[prop] || []).concat(tweeners['*']), index = 0, length = collection.length;\n    for (; index < length; index++) {\n        if (collection[index].call(animation, prop, value)) {\n            return;\n        }\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    delete tick.elem;\n}",
    "receiverBase": "Deferred",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    anim.always(function () {\n        hooks.unqueued--;\n        if (!jQuery.queue(elem, 'fx').length) {\n            hooks.empty.fire();\n        }\n    });\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    hooks.unqueued--;\n    if (!jQuery.queue(elem, 'fx').length) {\n        hooks.empty.fire();\n    }\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    style.overflow = opts.overflow[0];\n    style.overflowX = opts.overflow[1];\n    style.overflowY = opts.overflow[2];\n}",
    "receiverBase": "anim",
    "receiverCallee": "always"
  },
  {
    "callback": "function () {\n    jQuery(elem).hide();\n}",
    "receiverBase": "anim",
    "receiverCallee": "done"
  },
  {
    "callback": "function () {\n    var prop;\n    data_priv.remove(elem, 'fxshow');\n    for (prop in orig) {\n        jQuery.style(elem, prop, orig[prop]);\n    }\n}",
    "receiverBase": "anim",
    "receiverCallee": "done"
  },
  {
    "callback": "function (i, name) {\n    var cssFn = jQuery.fn[name];\n    jQuery.fn[name] = function (speed, easing, callback) {\n        return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n        return this.animate(props, speed, easing, callback);\n    };\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "each"
  },
  {
    "callback": "function (fn) {\n    return elem === fn.elem;\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "grep"
  },
  {
    "callback": "function (i) {\n    jQuery.offset.setOffset(this, options, i);\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    var offsetParent = this.offsetParent || docElem;\n    while (offsetParent && (!jQuery.nodeName(offsetParent, 'html') && jQuery.css(offsetParent, 'position') === 'static')) {\n        offsetParent = offsetParent.offsetParent;\n    }\n    return offsetParent || docElem;\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "map"
  },
  {
    "callback": "function (elem, method, val) {\n    var win = getWindow(elem);\n    if (val === undefined) {\n        return win ? win[prop] : elem[method];\n    }\n    if (win) {\n        win.scrollTo(!top ? val : window.pageXOffset, top ? val : window.pageYOffset);\n    } else {\n        elem[method] = val;\n    }\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "access"
  },
  {
    "callback": "function (elem, type, value) {\n    var doc;\n    if (jQuery.isWindow(elem)) {\n        return elem.document.documentElement['client' + name];\n    }\n    if (elem.nodeType === 9) {\n        doc = elem.documentElement;\n        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);\n    }\n    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);\n}",
    "receiverBase": "jQuery",
    "receiverCallee": "access"
  },
  {
    "callback": "function () {\n    return jQuery;\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function (angular) {\n    'use strict';\n    angular.module('logExample', []).controller('LogController', [\n        '$scope',\n        '$log',\n        function ($scope, $log) {\n            $scope.$log = $log;\n            $scope.message = 'Hello World!';\n        }\n    ]);\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "revealObjectByHeapSnapshotId"
  },
  {
    "callback": "function (addon) {\n    var component;\n    if (jQuery && jQuery.UIkit) {\n        component = addon(jQuery, jQuery.UIkit);\n    }\n    if (typeof define == 'function' && define.amd) {\n        define('uikit-nestable', ['uikit'], function () {\n            return component || addon(jQuery, jQuery.UIkit);\n        });\n    }\n}",
    "receiverBase": ""
  },
  {
    "callback": "function () {\n    return component || addon(jQuery, jQuery.UIkit);\n}",
    "receiverBase": "",
    "receiverCallee": "define"
  },
  {
    "callback": "function () {\n    var el = document.createElement('div'), docEl = document.documentElement;\n    if (!('pointerEvents' in el.style)) {\n        return false;\n    }\n    el.style.pointerEvents = 'auto';\n    el.style.pointerEvents = 'x';\n    docEl.appendChild(el);\n    var supports = window.getComputedStyle && window.getComputedStyle(el, '').pointerEvents === 'auto';\n    docEl.removeChild(el);\n    return !!supports;\n}",
    "receiverBase": ""
  },
  {
    "callback": "function (key) {\n    if (String($this.options[key]).indexOf('{prefix}') != -1) {\n        $this.options[key] = $this.options[key].replace('{prefix}', $this.options.prefix);\n    }\n}",
    "receiverBase": "keys",
    "receiverCallee": "forEach"
  },
  {
    "callback": "function () {\n    $this.setParent($(this));\n}",
    "receiverBase": "find",
    "receiverCallee": "each"
  },
  {
    "callback": "function (e) {\n    if ($this.dragEl || !hasTouch && e.button !== 0) {\n        return;\n    }\n    e.preventDefault();\n    var target = $(e.currentTarget), action = target.data('nestableAction'), item = target.closest($this.options.itemNodeName);\n    if (action === 'collapse') {\n        $this.collapseItem(item);\n    }\n    if (action === 'expand') {\n        $this.expandItem(item);\n    }\n    if (action === 'toggle') {\n        $this.toggleItem(item);\n    }\n}",
    "receiverBase": "LIT:this",
    "receiverCallee": "on"
  },
  {
    "callback": "function () {\n    var li = $(this), item = $.extend({}, li.data()), sub = li.children(list.options.listNodeName);\n    if (sub.length) {\n        item.children = step(sub, depth + 1);\n    }\n    array.push(item);\n}",
    "receiverBase": "items",
    "receiverCallee": "each"
  },
  {
    "callback": "function (index) {\n    var li = $(this), item = $.extend({\n            parent_id: parent ? parent : null,\n            depth: depth,\n            order: index\n        }, li.data()), sub = li.children(options.listNodeName);\n    data.push(item);\n    if (sub.length) {\n        step(sub, depth + 1, li.data(options.idProperty || 'id'));\n    }\n}",
    "receiverBase": "items",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    list.expandItem($(this));\n}",
    "receiverBase": "find",
    "receiverCallee": "each"
  },
  {
    "callback": "function () {\n    list.collapseItem($(this));\n}",
    "receiverBase": "find",
    "receiverCallee": "each"
  },
  {
    "callback": "function (e) {\n    if (draggingElement) {\n        var top = draggingElement.offset().top;\n        if (top < UI.$win.scrollTop()) {\n            UI.$win.scrollTop(UI.$win.scrollTop() - Math.ceil(draggingElement.height() / 2));\n        } else if (top + draggingElement.height() > window.innerHeight + UI.$win.scrollTop()) {\n            UI.$win.scrollTop(UI.$win.scrollTop() + Math.ceil(draggingElement.height() / 2));\n        }\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "on"
  },
  {
    "callback": "function (context) {\n    $('[data-uk-nestable]', context).each(function () {\n        var ele = $(this);\n        if (!ele.data('nestable')) {\n            var plugin = UI.nestable(ele, UI.Utils.options(ele.attr('data-uk-nestable')));\n        }\n    });\n}",
    "receiverBase": "UI",
    "receiverCallee": "ready"
  },
  {
    "callback": "function () {\n    var ele = $(this);\n    if (!ele.data('nestable')) {\n        var plugin = UI.nestable(ele, UI.Utils.options(ele.attr('data-uk-nestable')));\n    }\n}",
    "receiverBase": "$",
    "receiverCallee": "each"
  },
  {
    "callback": "function (m, a) {\n    var textRef = a, r = null, s = '';\n    for (var x in bookMap) {\n        textRef = textRef.replace(x + '_', bookMap[x]);\n    }\n    r = new bibleReference(textRef);\n    if (typeof r.toSection != 'undefined') {\n        s = '<span class=\"bibleref\" data-id=\"' + r.toSection() + '\">' + r.chapterAndVerse() + '</span>';\n    } else {\n        console.log('err', a);\n    }\n    lastReference = r;\n    return s;\n}",
    "receiverBase": "text",
    "receiverCallee": "replace"
  },
  {
    "callback": "function (m, a) {\n    var textRef = a, r = null, s = '';\n    for (var x in bookMap) {\n        textRef = textRef.replace(x + '_', bookMap[x]);\n    }\n    r = new bibleReference(textRef);\n    if (typeof r.toSection != 'undefined') {\n        s = '<span class=\"bibleref\" data-id=\"' + r.toSection() + '\">' + (r.bookid == lastReference.bookid ? r.chapterAndVerse() : r.toString()) + '</span>';\n    } else {\n        s = '<span class=\"bibleref\">' + a + '</span>';\n    }\n    lastReference = r;\n    return s;\n}",
    "receiverBase": "text",
    "receiverCallee": "replace"
  }
]